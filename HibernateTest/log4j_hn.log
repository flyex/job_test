[03/04/19 03:29:46:046 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[03/04/19 03:29:46:046 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[03/04/19 03:29:46:046 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[03/04/19 03:29:46:046 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[03/04/19 03:29:46:046 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[03/04/19 03:29:47:047 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[03/04/19 03:29:47:047 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 03:29:47:047 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[03/04/19 03:29:47:047 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[03/04/19 03:29:47:047 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[03/04/19 03:29:47:047 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[03/04/19 03:29:47:047 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[03/04/19 03:29:47:047 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[03/04/19 03:29:47:047 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ddabb18
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@58e6d4b8
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@6ca0256d
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6731787b
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@34625ccd
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@3f28bd56
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@3f28bd56
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5be067de
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24fb6a80
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@18a3962d
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@18a3962d
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c9399a4
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fd46303
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60bdf15d
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@66629f63
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@66629f63
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@66629f63
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@6e521c1e
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4ef27d66
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6a1d204a
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@6c6357f9
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c041b41
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c9168dc
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@32232e55
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@77307458
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21c64522
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7997b197
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11dee337
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@460f76a6
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55f3c410
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11acdc30
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@770d4269
[03/04/19 03:29:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a8ab068
[03/04/19 03:29:48:048 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 03:29:48:048 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 03:29:48:048 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[03/04/19 03:29:49:049 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 03:29:49:049 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 03:29:49:049 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[03/04/19 03:29:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[03/04/19 03:29:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[03/04/19 03:29:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 03:29:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 03:29:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[03/04/19 03:29:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[03/04/19 03:29:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[03/04/19 03:29:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 03:29:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[03/04/19 03:29:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[03/04/19 03:29:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[03/04/19 03:29:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[03/04/19 03:29:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 03:29:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[03/04/19 03:29:49:049 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[03/04/19 03:29:49:049 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[03/04/19 03:29:49:049 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[03/04/19 03:29:49:049 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[03/04/19 03:29:49:049 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[03/04/19 03:29:49:049 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[03/04/19 03:29:49:049 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.13
      major : 8
      minor : 0
[03/04/19 03:29:49:049 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[03/04/19 03:29:49:049 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[03/04/19 03:29:49:049 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[03/04/19 03:29:49:049 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[03/04/19 03:29:49:049 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[03/04/19 03:29:49:049 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[03/04/19 03:29:49:049 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66153688]
[03/04/19 03:29:49:049 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[03/04/19 03:29:49:049 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[03/04/19 03:29:49:049 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[03/04/19 03:29:49:049 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[03/04/19 03:29:49:049 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[03/04/19 03:29:49:049 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[03/04/19 03:29:49:049 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[03/04/19 03:29:49:049 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[03/04/19 03:29:49:049 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[03/04/19 03:29:49:049 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[03/04/19 03:29:49:049 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[03/04/19 03:29:49:049 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[03/04/19 03:29:49:049 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[03/04/19 03:29:49:049 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[03/04/19 03:29:49:049 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[03/04/19 03:29:49:049 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 03:29:49:049 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 03:29:49:049 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[03/04/19 03:29:49:049 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[03/04/19 03:29:49:049 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: SessionFactory name : null
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Statistics: disabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Default null ordering: NONE
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Query language substitutions: {}
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Named query checking : enabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Second-level cache: disabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: JDBC batch size: 15
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: JPA compliance - query : 
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[03/04/19 03:29:49:049 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[03/04/19 03:29:49:049 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[03/04/19 03:29:49:049 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.flyex.demo.UserDemo, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2127e66e, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[03/04/19 03:29:49:049 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[03/04/19 03:29:49:049 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[03/04/19 03:29:49:049 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@e57e5d6]
[03/04/19 03:29:50:050 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 03:29:50:050 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 03:29:50:050 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 03:29:50:050 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 03:29:50:050 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 03:29:50:050 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 03:29:50:050 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[03/04/19 03:29:50:050 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[03/04/19 03:29:50:050 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[03/04/19 03:29:50:050 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[03/04/19 03:29:50:050 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[03/04/19 03:29:50:050 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[03/04/19 03:29:50:050 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f5156a6]
[03/04/19 03:29:50:050 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@66de00f2]
[03/04/19 03:29:50:050 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 03:29:50:050 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 03:29:50:050 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 03:29:50:050 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 03:29:50:050 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 03:29:50:050 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 03:29:50:050 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 03:29:50:050 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@430b2699]
[03/04/19 03:29:50:050 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67536ae0]
[03/04/19 03:29:50:050 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 03:29:50:050 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 03:29:50:050 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 03:29:50:050 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 03:29:50:050 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 03:29:50:050 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 03:29:50:050 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 03:29:50:050 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 03:29:50:050 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 03:29:50:050 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[03/04/19 03:29:50:050 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[03/04/19 03:29:50:050 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[03/04/19 03:29:50:050 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[03/04/19 03:29:50:050 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[03/04/19 03:29:50:050 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[03/04/19 03:29:50:050 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[03/04/19 03:29:50:050 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e43829]
[03/04/19 03:29:50:050 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 03:29:50:050 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 03:29:50:050 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 03:29:50:050 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 03:29:50:050 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 03:29:50:050 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 03:29:50:050 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a44cfc0]
[03/04/19 03:29:50:050 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 03:29:50:050 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 03:29:50:050 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 03:29:50:050 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 03:29:50:050 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 03:29:50:050 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 03:29:50:050 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 03:29:50:050 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 03:29:50:050 CST] DEBUG mapping.Table: No alter strings for table : user
[03/04/19 03:29:50:050 CST] DEBUG mapping.Table: No alter strings for table : user2
[03/04/19 03:29:50:050 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[03/04/19 03:29:50:050 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[03/04/19 03:29:50:050 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 03:29:50:050 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 03:29:50:050 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[03/04/19 03:29:50:050 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[03/04/19 03:29:50:050 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2fd72332
[03/04/19 03:29:50:050 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 83c4aac5-d1d3-4f43-9c00-f04acf020f3d (<unnamed>)
[03/04/19 03:29:50:050 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[03/04/19 03:29:50:050 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[03/04/19 03:29:50:050 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[03/04/19 03:29:50:050 CST] DEBUG internal.TransactionImpl: begin
[03/04/19 03:29:50:050 CST] DEBUG internal.AbstractSaveEventListener: Generated identifier: component[id,userName,age]{id=2019, userName=瑞文, age=1811}, using strategy: org.hibernate.id.CompositeNestedGeneratedValueGenerator
[03/04/19 03:29:50:050 CST] DEBUG internal.TransactionImpl: committing
[03/04/19 03:29:50:050 CST] DEBUG internal.AbstractFlushingEventListener: Processing flush-time cascades
[03/04/19 03:29:50:050 CST] DEBUG internal.AbstractFlushingEventListener: Dirty checking collections
[03/04/19 03:29:50:050 CST] DEBUG internal.AbstractFlushingEventListener: Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[03/04/19 03:29:50:050 CST] DEBUG internal.AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[03/04/19 03:29:50:050 CST] DEBUG util.EntityPrinter: Listing entities:
[03/04/19 03:29:50:050 CST] DEBUG util.EntityPrinter: com.flyex.bean.User{}
[03/04/19 03:29:50:050 CST] DEBUG hibernate.SQL: 
    insert 
    into
        user
        (Id, UserName, Age) 
    values
        (?, ?, ?)
[03/04/19 03:29:50:050 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 03:29:50:050 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 03:29:50:050 CST] DEBUG internal.SessionFactoryImpl: HHH000031: Closing
[03/04/19 03:29:50:050 CST] DEBUG spi.TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@261bd7b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@e57e5d6]
[03/04/19 03:29:50:050 CST] DEBUG internal.AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[03/04/19 03:29:50:050 CST]  INFO connections.pooling: HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/test]
[03/04/19 03:29:50:050 CST] DEBUG internal.BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[03/04/19 03:30:34:034 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[03/04/19 03:30:34:034 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[03/04/19 03:30:34:034 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[03/04/19 03:30:34:034 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[03/04/19 03:30:34:034 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[03/04/19 03:30:34:034 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[03/04/19 03:30:34:034 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 03:30:34:034 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[03/04/19 03:30:35:035 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[03/04/19 03:30:35:035 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[03/04/19 03:30:35:035 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[03/04/19 03:30:35:035 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[03/04/19 03:30:35:035 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[03/04/19 03:30:35:035 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f1c5af9
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@63192798
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@376a312c
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@77602954
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@77602954
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@77602954
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@73c60324
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@73c60324
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73c60324
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@24bdb479
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@24bdb479
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@24bdb479
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@533377b
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@533377b
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@533377b
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@58670130
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@58670130
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58670130
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46f699d5
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46f699d5
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@162be91c
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@162be91c
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@f74e835
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@f74e835
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@19fe4644
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@18245eb0
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@4ae33a11
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@4ae33a11
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@2a3591c5
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2a3591c5
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@423e4cbb
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@423e4cbb
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6256ac4f
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6256ac4f
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@757d6814
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@757d6814
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@36b0fcd5
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@36b0fcd5
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@226642a5
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@226642a5
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4fe89c24
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4fe89c24
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cf92cc7
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cf92cc7
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@52500920
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@52500920
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@452ba1db
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@452ba1db
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5ac86ba5
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5e8f9e2d
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@60fa3495
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60fa3495
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@5fcacc0
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fcacc0
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d71006f
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d71006f
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@5f3b9c57
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f3b9c57
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2484f433
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2484f433
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7c22d4f
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@37f21974
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@5d5d9e5
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@40dd3977
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@4b6579e8
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@493dfb8e
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@493dfb8e
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f162cc0
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@669513d8
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@669513d8
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@7876d598
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7876d598
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4985cbcb
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@549621f3
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@7bf9b098
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@b672aa8
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@b672aa8
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5cc69cfe
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@29cfd92b
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21c64522
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7997b197
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@11dee337
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@460f76a6
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55f3c410
[03/04/19 03:30:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11acdc30
[03/04/19 03:30:35:035 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 03:30:35:035 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 03:30:36:036 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[03/04/19 03:30:36:036 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 03:30:36:036 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 03:30:36:036 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[03/04/19 03:30:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[03/04/19 03:30:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[03/04/19 03:30:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 03:30:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 03:30:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[03/04/19 03:30:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[03/04/19 03:30:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[03/04/19 03:30:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 03:30:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[03/04/19 03:30:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[03/04/19 03:30:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[03/04/19 03:30:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[03/04/19 03:30:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 03:30:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[03/04/19 03:30:36:036 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[03/04/19 03:30:36:036 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[03/04/19 03:30:36:036 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[03/04/19 03:30:36:036 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[03/04/19 03:30:36:036 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[03/04/19 03:30:36:036 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[03/04/19 03:30:37:037 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.13
      major : 8
      minor : 0
[03/04/19 03:30:37:037 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[03/04/19 03:30:37:037 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[03/04/19 03:30:37:037 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[03/04/19 03:30:37:037 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[03/04/19 03:30:37:037 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[03/04/19 03:30:37:037 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[03/04/19 03:30:37:037 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@552ed807] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3971f0fe]
[03/04/19 03:30:37:037 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[03/04/19 03:30:37:037 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[03/04/19 03:30:37:037 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[03/04/19 03:30:37:037 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[03/04/19 03:30:37:037 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[03/04/19 03:30:37:037 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[03/04/19 03:30:37:037 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[03/04/19 03:30:37:037 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[03/04/19 03:30:37:037 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[03/04/19 03:30:37:037 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[03/04/19 03:30:37:037 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[03/04/19 03:30:37:037 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[03/04/19 03:30:37:037 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[03/04/19 03:30:37:037 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[03/04/19 03:30:37:037 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[03/04/19 03:30:37:037 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 03:30:37:037 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 03:30:37:037 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[03/04/19 03:30:37:037 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[03/04/19 03:30:37:037 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: SessionFactory name : null
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Statistics: disabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Default null ordering: NONE
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Query language substitutions: {}
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Named query checking : enabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Second-level cache: disabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: JDBC batch size: 15
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: JPA compliance - query : 
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[03/04/19 03:30:37:037 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[03/04/19 03:30:37:037 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[03/04/19 03:30:37:037 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.flyex.demo.UserDemo, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6ede46f6, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[03/04/19 03:30:37:037 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[03/04/19 03:30:37:037 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[03/04/19 03:30:37:037 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@552ed807] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22a6e998]
[03/04/19 03:30:37:037 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 03:30:37:037 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 03:30:38:038 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 03:30:38:038 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 03:30:38:038 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 03:30:38:038 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 03:30:38:038 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[03/04/19 03:30:38:038 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[03/04/19 03:30:38:038 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[03/04/19 03:30:38:038 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[03/04/19 03:30:38:038 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[03/04/19 03:30:38:038 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[03/04/19 03:30:38:038 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33379242]
[03/04/19 03:30:38:038 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5b20706]
[03/04/19 03:30:38:038 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 03:30:38:038 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 03:30:38:038 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 03:30:38:038 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 03:30:38:038 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 03:30:38:038 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 03:30:38:038 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 03:30:38:038 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f939a0f]
[03/04/19 03:30:38:038 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@45658133]
[03/04/19 03:30:38:038 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 03:30:38:038 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 03:30:38:038 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 03:30:38:038 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 03:30:38:038 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 03:30:38:038 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 03:30:38:038 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 03:30:38:038 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 03:30:38:038 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 03:30:38:038 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[03/04/19 03:30:38:038 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[03/04/19 03:30:38:038 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[03/04/19 03:30:38:038 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[03/04/19 03:30:38:038 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[03/04/19 03:30:38:038 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[03/04/19 03:30:38:038 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[03/04/19 03:30:38:038 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6215366a]
[03/04/19 03:30:38:038 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 03:30:38:038 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 03:30:38:038 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 03:30:38:038 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 03:30:38:038 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 03:30:38:038 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 03:30:38:038 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fa4f485]
[03/04/19 03:30:38:038 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 03:30:38:038 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 03:30:38:038 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 03:30:38:038 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 03:30:38:038 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 03:30:38:038 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 03:30:38:038 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 03:30:38:038 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 03:30:38:038 CST] DEBUG mapping.Table: No alter strings for table : user
[03/04/19 03:30:38:038 CST] DEBUG mapping.Table: No alter strings for table : user2
[03/04/19 03:30:38:038 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[03/04/19 03:30:38:038 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[03/04/19 03:30:38:038 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 03:30:38:038 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 03:30:38:038 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[03/04/19 03:30:38:038 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[03/04/19 03:30:38:038 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@bf75b5c
[03/04/19 03:30:38:038 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 29c045ed-4f31-4a27-8e89-9d9bf3dc5df7 (<unnamed>)
[03/04/19 03:30:38:038 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[03/04/19 03:30:38:038 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[03/04/19 03:30:38:038 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[03/04/19 03:30:38:038 CST] DEBUG internal.TransactionImpl: begin
[03/04/19 03:30:38:038 CST] DEBUG internal.AbstractSaveEventListener: Generated identifier: component[id,userName,age]{id=2019, userName=瑞文, age=1811}, using strategy: org.hibernate.id.CompositeNestedGeneratedValueGenerator
[03/04/19 03:30:38:038 CST] DEBUG internal.TransactionImpl: committing
[03/04/19 03:30:38:038 CST] DEBUG internal.AbstractFlushingEventListener: Processing flush-time cascades
[03/04/19 03:30:38:038 CST] DEBUG internal.AbstractFlushingEventListener: Dirty checking collections
[03/04/19 03:30:38:038 CST] DEBUG internal.AbstractFlushingEventListener: Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[03/04/19 03:30:38:038 CST] DEBUG internal.AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[03/04/19 03:30:38:038 CST] DEBUG util.EntityPrinter: Listing entities:
[03/04/19 03:30:38:038 CST] DEBUG util.EntityPrinter: com.flyex.bean.User{}
[03/04/19 03:30:38:038 CST] DEBUG hibernate.SQL: 
    insert 
    into
        user
        (Id, UserName, Age) 
    values
        (?, ?, ?)
[03/04/19 03:30:38:038 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 03:30:38:038 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 03:30:38:038 CST] DEBUG internal.SessionFactoryImpl: HHH000031: Closing
[03/04/19 03:30:38:038 CST] DEBUG spi.TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1f992a3a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@22a6e998]
[03/04/19 03:30:38:038 CST] DEBUG internal.AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[03/04/19 03:30:38:038 CST]  INFO connections.pooling: HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/test]
[03/04/19 03:30:38:038 CST] DEBUG internal.BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[03/04/19 04:59:53:053 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[03/04/19 04:59:53:053 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[03/04/19 04:59:53:053 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[03/04/19 04:59:53:053 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[03/04/19 04:59:53:053 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[03/04/19 04:59:54:054 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[03/04/19 04:59:54:054 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 04:59:54:054 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[03/04/19 04:59:54:054 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[03/04/19 04:59:54:054 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[03/04/19 04:59:54:054 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[03/04/19 04:59:54:054 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[03/04/19 04:59:54:054 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[03/04/19 04:59:54:054 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ddabb18
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@58e6d4b8
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@6ca0256d
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6731787b
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@34625ccd
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@3f28bd56
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@3f28bd56
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5be067de
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24fb6a80
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@18a3962d
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@18a3962d
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c9399a4
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fd46303
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60bdf15d
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@66629f63
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@66629f63
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@66629f63
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@6e521c1e
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4ef27d66
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6a1d204a
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@6c6357f9
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c041b41
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c9168dc
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@32232e55
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@77307458
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21c64522
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7997b197
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11dee337
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@460f76a6
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55f3c410
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11acdc30
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@770d4269
[03/04/19 04:59:55:055 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a8ab068
[03/04/19 04:59:55:055 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 04:59:55:055 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 04:59:55:055 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[03/04/19 04:59:57:057 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 04:59:57:057 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 04:59:57:057 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[03/04/19 04:59:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[03/04/19 04:59:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[03/04/19 04:59:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 04:59:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 04:59:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[03/04/19 04:59:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[03/04/19 04:59:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[03/04/19 04:59:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 04:59:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[03/04/19 04:59:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[03/04/19 04:59:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[03/04/19 04:59:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[03/04/19 04:59:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 04:59:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[03/04/19 04:59:57:057 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[03/04/19 04:59:57:057 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[03/04/19 04:59:57:057 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[03/04/19 04:59:57:057 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[03/04/19 04:59:57:057 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[03/04/19 04:59:57:057 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[03/04/19 04:59:57:057 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.13
      major : 8
      minor : 0
[03/04/19 04:59:57:057 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[03/04/19 04:59:57:057 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[03/04/19 04:59:57:057 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[03/04/19 04:59:57:057 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[03/04/19 04:59:57:057 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[03/04/19 04:59:58:058 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[03/04/19 04:59:58:058 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66153688]
[03/04/19 04:59:58:058 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[03/04/19 04:59:58:058 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[03/04/19 04:59:58:058 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[03/04/19 04:59:58:058 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[03/04/19 04:59:58:058 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[03/04/19 04:59:58:058 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[03/04/19 04:59:58:058 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[03/04/19 04:59:58:058 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[03/04/19 04:59:58:058 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[03/04/19 04:59:58:058 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[03/04/19 04:59:58:058 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[03/04/19 04:59:58:058 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[03/04/19 04:59:58:058 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[03/04/19 04:59:58:058 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[03/04/19 04:59:58:058 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[03/04/19 04:59:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 04:59:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 04:59:58:058 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[03/04/19 04:59:58:058 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[03/04/19 04:59:58:058 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: SessionFactory name : null
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Statistics: disabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Default null ordering: NONE
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Query language substitutions: {}
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Named query checking : enabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Second-level cache: disabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: JDBC batch size: 15
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: JPA compliance - query : 
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[03/04/19 04:59:58:058 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[03/04/19 04:59:58:058 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[03/04/19 04:59:58:058 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.flyex.demo.UserDemo, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2127e66e, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[03/04/19 04:59:58:058 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[03/04/19 04:59:58:058 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[03/04/19 04:59:58:058 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@e57e5d6]
[03/04/19 04:59:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 04:59:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 04:59:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 04:59:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 04:59:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 04:59:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 04:59:58:058 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[03/04/19 04:59:58:058 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[03/04/19 04:59:58:058 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[03/04/19 04:59:58:058 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[03/04/19 04:59:58:058 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[03/04/19 04:59:58:058 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[03/04/19 04:59:58:058 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f5156a6]
[03/04/19 04:59:58:058 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@66de00f2]
[03/04/19 04:59:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 04:59:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 04:59:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 04:59:58:058 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 04:59:58:058 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 04:59:58:058 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 04:59:58:058 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 04:59:58:058 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@430b2699]
[03/04/19 04:59:58:058 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67536ae0]
[03/04/19 04:59:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 04:59:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 04:59:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 04:59:58:058 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 04:59:58:058 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 04:59:58:058 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 04:59:58:058 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 04:59:58:058 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 04:59:58:058 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 04:59:58:058 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[03/04/19 04:59:58:058 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[03/04/19 04:59:58:058 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[03/04/19 04:59:58:058 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[03/04/19 04:59:58:058 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[03/04/19 04:59:58:058 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[03/04/19 04:59:58:058 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[03/04/19 04:59:58:058 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e43829]
[03/04/19 04:59:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 04:59:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 04:59:58:058 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 04:59:58:058 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 04:59:58:058 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 04:59:58:058 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 04:59:58:058 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a44cfc0]
[03/04/19 04:59:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 04:59:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 04:59:58:058 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 04:59:58:058 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 04:59:58:058 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 04:59:58:058 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 04:59:58:058 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 04:59:58:058 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 04:59:58:058 CST] DEBUG mapping.Table: No alter strings for table : user
[03/04/19 04:59:58:058 CST] DEBUG mapping.Table: No alter strings for table : user2
[03/04/19 04:59:59:059 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[03/04/19 04:59:59:059 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[03/04/19 04:59:59:059 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 04:59:59:059 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 04:59:59:059 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[03/04/19 04:59:59:059 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[03/04/19 04:59:59:059 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2fd72332
[03/04/19 04:59:59:059 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: d86b7372-446f-49c2-9beb-b78e275955cd (<unnamed>)
[03/04/19 04:59:59:059 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[03/04/19 04:59:59:059 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[03/04/19 04:59:59:059 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[03/04/19 04:59:59:059 CST] DEBUG internal.TransactionImpl: begin
[03/04/19 04:59:59:059 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@52454457
[03/04/19 04:59:59:059 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select age from com.flyex.bean.User where userName=:u
[03/04/19 04:59:59:059 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 04:59:59:059 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'flyex'
    |  |        |  \-[IDENT] Node: 'bean'
    |  |        \-[IDENT] Node: 'User'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'age'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'u'

[03/04/19 04:59:59:059 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[03/04/19 04:59:59:059 CST] DEBUG tree.FromElement: FromClause{level=1} : com.flyex.bean.User (<no alias>) -> user0_
[03/04/19 04:59:59:059 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 04:59:59:059 CST] DEBUG tree.DotNode: getDataType() : age -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 04:59:59:059 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.age -> user0_.Age
[03/04/19 04:59:59:059 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 04:59:59:059 CST] DEBUG tree.DotNode: getDataType() : userName -> org.hibernate.type.StringType@3f28bd56
[03/04/19 04:59:59:059 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.userName -> user0_.UserName
[03/04/19 04:59:59:059 CST] DEBUG antlr.HqlSqlBaseWalker: select : finishing up [level=1, statement=select]
[03/04/19 04:59:59:059 CST] DEBUG ast.HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} ( user0_.Age {synthetic-alias} age ) ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.UserName {synthetic-alias} userName ) ? ) ) )
[03/04/19 04:59:59:059 CST] DEBUG util.JoinProcessor: Using FROM fragment [user user0_]
[03/04/19 04:59:59:059 CST] DEBUG antlr.HqlSqlBaseWalker: select >> end [level=1, statement=select]
[03/04/19 04:59:59:059 CST] DEBUG ast.QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.Age' {propertyName=age,dereferenceType=PRIMITIVE,getPropertyPath=age,path={synthetic-alias}.age,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'age' {originalText=age}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.flyex.bean.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.UserName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path={synthetic-alias}.userName,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=u, expectedType=org.hibernate.type.StringType@3f28bd56}

[03/04/19 04:59:59:059 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 04:59:59:059 CST] DEBUG ast.QueryTranslatorImpl: HQL: select age from com.flyex.bean.User where userName=:u
[03/04/19 04:59:59:059 CST] DEBUG ast.QueryTranslatorImpl: SQL: select user0_.Age as col_0_0_ from user user0_ where user0_.UserName=?
[03/04/19 04:59:59:059 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:00:46:046 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[03/04/19 05:00:46:046 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[03/04/19 05:00:46:046 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[03/04/19 05:00:47:047 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[03/04/19 05:00:47:047 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[03/04/19 05:00:47:047 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[03/04/19 05:00:47:047 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:00:47:047 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[03/04/19 05:00:47:047 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[03/04/19 05:00:47:047 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[03/04/19 05:00:47:047 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[03/04/19 05:00:47:047 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[03/04/19 05:00:47:047 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[03/04/19 05:00:47:047 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ddabb18
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@58e6d4b8
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@6ca0256d
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5be067de
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24fb6a80
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@18a3962d
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@18a3962d
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c9399a4
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fd46303
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60bdf15d
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@6e521c1e
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4ef27d66
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6a1d204a
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@6c6357f9
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c041b41
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c9168dc
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@32232e55
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@77307458
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21c64522
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7997b197
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11dee337
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@460f76a6
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55f3c410
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11acdc30
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@770d4269
[03/04/19 05:00:48:048 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a8ab068
[03/04/19 05:00:48:048 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:00:48:048 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:00:48:048 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[03/04/19 05:00:49:049 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:00:49:049 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:00:49:049 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[03/04/19 05:00:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[03/04/19 05:00:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[03/04/19 05:00:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:00:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:00:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[03/04/19 05:00:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[03/04/19 05:00:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[03/04/19 05:00:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:00:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[03/04/19 05:00:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[03/04/19 05:00:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[03/04/19 05:00:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[03/04/19 05:00:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:00:49:049 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[03/04/19 05:00:49:049 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[03/04/19 05:00:49:049 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[03/04/19 05:00:49:049 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[03/04/19 05:00:49:049 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[03/04/19 05:00:49:049 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[03/04/19 05:00:49:049 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[03/04/19 05:00:50:050 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.13
      major : 8
      minor : 0
[03/04/19 05:00:50:050 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[03/04/19 05:00:50:050 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[03/04/19 05:00:50:050 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[03/04/19 05:00:50:050 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[03/04/19 05:00:50:050 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[03/04/19 05:00:50:050 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[03/04/19 05:00:50:050 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66153688]
[03/04/19 05:00:50:050 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[03/04/19 05:00:50:050 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[03/04/19 05:00:50:050 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[03/04/19 05:00:50:050 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[03/04/19 05:00:50:050 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[03/04/19 05:00:50:050 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[03/04/19 05:00:50:050 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[03/04/19 05:00:50:050 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:00:50:050 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:00:50:050 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:00:50:050 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[03/04/19 05:00:50:050 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[03/04/19 05:00:50:050 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[03/04/19 05:00:50:050 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[03/04/19 05:00:50:050 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[03/04/19 05:00:50:050 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:00:50:050 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:00:50:050 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[03/04/19 05:00:50:050 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[03/04/19 05:00:50:050 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: SessionFactory name : null
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Statistics: disabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Default null ordering: NONE
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Query language substitutions: {}
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Named query checking : enabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Second-level cache: disabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: JDBC batch size: 15
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: JPA compliance - query : 
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[03/04/19 05:00:50:050 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[03/04/19 05:00:50:050 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[03/04/19 05:00:50:050 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.flyex.demo.UserDemo, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2127e66e, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[03/04/19 05:00:50:050 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[03/04/19 05:00:50:050 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[03/04/19 05:00:50:050 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@e57e5d6]
[03/04/19 05:00:50:050 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:00:50:050 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:00:50:050 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:00:50:050 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:00:50:050 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:00:50:050 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:00:50:050 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[03/04/19 05:00:50:050 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[03/04/19 05:00:50:050 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[03/04/19 05:00:50:050 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[03/04/19 05:00:50:050 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[03/04/19 05:00:50:050 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[03/04/19 05:00:50:050 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f5156a6]
[03/04/19 05:00:50:050 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@66de00f2]
[03/04/19 05:00:51:051 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:00:51:051 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:00:51:051 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:00:51:051 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:00:51:051 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:00:51:051 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:00:51:051 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:00:51:051 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@430b2699]
[03/04/19 05:00:51:051 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67536ae0]
[03/04/19 05:00:51:051 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:00:51:051 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:00:51:051 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:00:51:051 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:00:51:051 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:00:51:051 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:00:51:051 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:00:51:051 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:00:51:051 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:00:51:051 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[03/04/19 05:00:51:051 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[03/04/19 05:00:51:051 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[03/04/19 05:00:51:051 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[03/04/19 05:00:51:051 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[03/04/19 05:00:51:051 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[03/04/19 05:00:51:051 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[03/04/19 05:00:51:051 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e43829]
[03/04/19 05:00:51:051 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:00:51:051 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:00:51:051 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:00:51:051 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:00:51:051 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:00:51:051 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:00:51:051 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a44cfc0]
[03/04/19 05:00:51:051 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:00:51:051 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:00:51:051 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:00:51:051 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:00:51:051 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:00:51:051 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:00:51:051 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:00:51:051 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:00:51:051 CST] DEBUG mapping.Table: No alter strings for table : user
[03/04/19 05:00:51:051 CST] DEBUG mapping.Table: No alter strings for table : user2
[03/04/19 05:00:51:051 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[03/04/19 05:00:51:051 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[03/04/19 05:00:51:051 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:00:51:051 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:00:51:051 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[03/04/19 05:00:51:051 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[03/04/19 05:00:51:051 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2fd72332
[03/04/19 05:00:51:051 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 75475460-938e-4dbc-b2d6-c3d290c20152 (<unnamed>)
[03/04/19 05:00:51:051 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[03/04/19 05:00:51:051 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[03/04/19 05:00:51:051 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[03/04/19 05:00:51:051 CST] DEBUG internal.TransactionImpl: begin
[03/04/19 05:00:51:051 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@52454457
[03/04/19 05:00:51:051 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select age from com.flyex.bean.User where userName='李绮华'
[03/04/19 05:00:51:051 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:00:51:051 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'flyex'
    |  |        |  \-[IDENT] Node: 'bean'
    |  |        \-[IDENT] Node: 'User'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'age'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'userName'
          \-[QUOTED_STRING] Node: ''\u674e\u7eee\u534e''

[03/04/19 05:00:51:051 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[03/04/19 05:00:51:051 CST] DEBUG tree.FromElement: FromClause{level=1} : com.flyex.bean.User (<no alias>) -> user0_
[03/04/19 05:00:51:051 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:00:51:051 CST] DEBUG tree.DotNode: getDataType() : age -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:00:51:051 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.age -> user0_.Age
[03/04/19 05:00:51:051 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:00:51:051 CST] DEBUG tree.DotNode: getDataType() : userName -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:00:51:051 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.userName -> user0_.UserName
[03/04/19 05:00:51:051 CST] DEBUG antlr.HqlSqlBaseWalker: select : finishing up [level=1, statement=select]
[03/04/19 05:00:51:051 CST] DEBUG ast.HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} ( user0_.Age {synthetic-alias} age ) ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.UserName {synthetic-alias} userName ) '李绮华' ) ) )
[03/04/19 05:00:51:051 CST] DEBUG util.JoinProcessor: Using FROM fragment [user user0_]
[03/04/19 05:00:51:051 CST] DEBUG antlr.HqlSqlBaseWalker: select >> end [level=1, statement=select]
[03/04/19 05:00:51:051 CST] DEBUG ast.QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.Age' {propertyName=age,dereferenceType=PRIMITIVE,getPropertyPath=age,path={synthetic-alias}.age,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'age' {originalText=age}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.flyex.bean.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.UserName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path={synthetic-alias}.userName,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[QUOTED_STRING] LiteralNode: ''\u674e\u7eee\u534e''

[03/04/19 05:00:51:051 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:00:51:051 CST] DEBUG ast.QueryTranslatorImpl: HQL: select age from com.flyex.bean.User where userName='李绮华'
[03/04/19 05:00:51:051 CST] DEBUG ast.QueryTranslatorImpl: SQL: select user0_.Age as col_0_0_ from user user0_ where user0_.UserName='李绮华'
[03/04/19 05:00:51:051 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:00:51:051 CST] DEBUG internal.TransactionImpl: committing
[03/04/19 05:00:51:051 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 05:00:51:051 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 05:00:51:051 CST] DEBUG internal.SessionFactoryImpl: HHH000031: Closing
[03/04/19 05:00:51:051 CST] DEBUG spi.TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@16d07cf3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@e57e5d6]
[03/04/19 05:00:51:051 CST] DEBUG internal.AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[03/04/19 05:00:51:051 CST]  INFO connections.pooling: HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/test]
[03/04/19 05:00:51:051 CST] DEBUG internal.BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[03/04/19 05:07:18:018 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[03/04/19 05:07:18:018 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[03/04/19 05:07:18:018 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[03/04/19 05:07:18:018 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[03/04/19 05:07:18:018 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[03/04/19 05:07:19:019 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[03/04/19 05:07:19:019 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:07:19:019 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[03/04/19 05:07:19:019 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[03/04/19 05:07:19:019 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[03/04/19 05:07:19:019 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[03/04/19 05:07:19:019 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[03/04/19 05:07:19:019 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[03/04/19 05:07:19:019 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f1c5af9
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@63192798
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@376a312c
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@77602954
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@77602954
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@77602954
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@73c60324
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@73c60324
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73c60324
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@24bdb479
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@24bdb479
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@24bdb479
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@533377b
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@533377b
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@533377b
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@58670130
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@58670130
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58670130
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46f699d5
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46f699d5
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@162be91c
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@162be91c
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@f74e835
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@f74e835
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@19fe4644
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@18245eb0
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@4ae33a11
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@4ae33a11
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@2a3591c5
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2a3591c5
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@423e4cbb
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@423e4cbb
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6256ac4f
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6256ac4f
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@757d6814
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@757d6814
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@36b0fcd5
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@36b0fcd5
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@226642a5
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@226642a5
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4fe89c24
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4fe89c24
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cf92cc7
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cf92cc7
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@52500920
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@52500920
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@452ba1db
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@452ba1db
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5ac86ba5
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5e8f9e2d
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@60fa3495
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60fa3495
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@5fcacc0
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fcacc0
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d71006f
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d71006f
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@5f3b9c57
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f3b9c57
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2484f433
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2484f433
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7c22d4f
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@37f21974
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@5d5d9e5
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@40dd3977
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@4b6579e8
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@493dfb8e
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@493dfb8e
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f162cc0
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@669513d8
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@669513d8
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@7876d598
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7876d598
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4985cbcb
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@549621f3
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@7bf9b098
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@b672aa8
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@b672aa8
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5cc69cfe
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@29cfd92b
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21c64522
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7997b197
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@11dee337
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@460f76a6
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55f3c410
[03/04/19 05:07:20:020 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11acdc30
[03/04/19 05:07:21:021 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:07:21:021 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:07:21:021 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[03/04/19 05:07:22:022 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:07:22:022 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:07:22:022 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[03/04/19 05:07:22:022 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[03/04/19 05:07:22:022 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[03/04/19 05:07:22:022 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:07:22:022 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:07:22:022 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[03/04/19 05:07:22:022 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[03/04/19 05:07:22:022 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[03/04/19 05:07:22:022 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:07:22:022 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[03/04/19 05:07:22:022 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[03/04/19 05:07:22:022 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[03/04/19 05:07:22:022 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[03/04/19 05:07:22:022 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:07:22:022 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[03/04/19 05:07:22:022 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[03/04/19 05:07:22:022 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[03/04/19 05:07:22:022 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[03/04/19 05:07:22:022 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[03/04/19 05:07:22:022 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[03/04/19 05:07:22:022 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[03/04/19 05:07:22:022 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.13
      major : 8
      minor : 0
[03/04/19 05:07:22:022 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[03/04/19 05:07:22:022 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[03/04/19 05:07:22:022 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[03/04/19 05:07:22:022 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[03/04/19 05:07:22:022 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[03/04/19 05:07:22:022 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[03/04/19 05:07:22:022 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@552ed807] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3971f0fe]
[03/04/19 05:07:22:022 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[03/04/19 05:07:22:022 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[03/04/19 05:07:22:022 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[03/04/19 05:07:22:022 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[03/04/19 05:07:22:022 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[03/04/19 05:07:22:022 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[03/04/19 05:07:22:022 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[03/04/19 05:07:22:022 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:07:22:022 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:07:22:022 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:07:22:022 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[03/04/19 05:07:22:022 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[03/04/19 05:07:22:022 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[03/04/19 05:07:22:022 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[03/04/19 05:07:22:022 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[03/04/19 05:07:22:022 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:07:22:022 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:07:22:022 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[03/04/19 05:07:22:022 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[03/04/19 05:07:22:022 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: SessionFactory name : null
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Statistics: disabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Default null ordering: NONE
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Query language substitutions: {}
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Named query checking : enabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Second-level cache: disabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: JDBC batch size: 15
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: JPA compliance - query : 
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[03/04/19 05:07:22:022 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[03/04/19 05:07:23:023 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[03/04/19 05:07:23:023 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.flyex.demo.UserDemo, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6ede46f6, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[03/04/19 05:07:23:023 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[03/04/19 05:07:23:023 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[03/04/19 05:07:23:023 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@552ed807] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22a6e998]
[03/04/19 05:07:23:023 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:07:23:023 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:07:23:023 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:07:23:023 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:07:23:023 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:07:23:023 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:07:23:023 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[03/04/19 05:07:23:023 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[03/04/19 05:07:23:023 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[03/04/19 05:07:23:023 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[03/04/19 05:07:23:023 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[03/04/19 05:07:23:023 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[03/04/19 05:07:23:023 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33379242]
[03/04/19 05:07:23:023 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5b20706]
[03/04/19 05:07:23:023 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:07:23:023 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:07:23:023 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:07:23:023 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:07:23:023 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:07:23:023 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:07:23:023 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:07:23:023 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f939a0f]
[03/04/19 05:07:23:023 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@45658133]
[03/04/19 05:07:23:023 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:07:23:023 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:07:23:023 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:07:23:023 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:07:23:023 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:07:23:023 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:07:23:023 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:07:23:023 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:07:23:023 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:07:23:023 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[03/04/19 05:07:23:023 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[03/04/19 05:07:23:023 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[03/04/19 05:07:23:023 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[03/04/19 05:07:23:023 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[03/04/19 05:07:23:023 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[03/04/19 05:07:23:023 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[03/04/19 05:07:23:023 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6215366a]
[03/04/19 05:07:23:023 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:07:23:023 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:07:23:023 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:07:23:023 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:07:23:023 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:07:23:023 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:07:23:023 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fa4f485]
[03/04/19 05:07:23:023 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:07:23:023 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:07:23:023 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:07:23:023 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:07:23:023 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:07:23:023 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:07:23:023 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:07:23:023 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:07:23:023 CST] DEBUG mapping.Table: No alter strings for table : user
[03/04/19 05:07:23:023 CST] DEBUG mapping.Table: No alter strings for table : user2
[03/04/19 05:07:23:023 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[03/04/19 05:07:23:023 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[03/04/19 05:07:23:023 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:07:23:023 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:07:23:023 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[03/04/19 05:07:23:023 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[03/04/19 05:07:23:023 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@bf75b5c
[03/04/19 05:07:23:023 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 0e108470-bdf6-4c6e-9da2-326c3d3b7582 (<unnamed>)
[03/04/19 05:07:23:023 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[03/04/19 05:07:23:023 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[03/04/19 05:07:23:023 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[03/04/19 05:07:23:023 CST] DEBUG internal.TransactionImpl: begin
[03/04/19 05:07:23:023 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ab35b9c
[03/04/19 05:07:23:023 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select age from com.flyex.bean.User where userName='李绮华'
[03/04/19 05:07:23:023 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:07:23:023 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'flyex'
    |  |        |  \-[IDENT] Node: 'bean'
    |  |        \-[IDENT] Node: 'User'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'age'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'userName'
          \-[QUOTED_STRING] Node: ''\u674e\u7eee\u534e''

[03/04/19 05:07:23:023 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[03/04/19 05:07:23:023 CST] DEBUG tree.FromElement: FromClause{level=1} : com.flyex.bean.User (<no alias>) -> user0_
[03/04/19 05:07:23:023 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:07:23:023 CST] DEBUG tree.DotNode: getDataType() : age -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:07:23:023 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.age -> user0_.Age
[03/04/19 05:07:23:023 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:07:23:023 CST] DEBUG tree.DotNode: getDataType() : userName -> org.hibernate.type.StringType@f74e835
[03/04/19 05:07:23:023 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.userName -> user0_.UserName
[03/04/19 05:07:23:023 CST] DEBUG antlr.HqlSqlBaseWalker: select : finishing up [level=1, statement=select]
[03/04/19 05:07:23:023 CST] DEBUG ast.HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} ( user0_.Age {synthetic-alias} age ) ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.UserName {synthetic-alias} userName ) '李绮华' ) ) )
[03/04/19 05:07:23:023 CST] DEBUG util.JoinProcessor: Using FROM fragment [user user0_]
[03/04/19 05:07:23:023 CST] DEBUG antlr.HqlSqlBaseWalker: select >> end [level=1, statement=select]
[03/04/19 05:07:23:023 CST] DEBUG ast.QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.Age' {propertyName=age,dereferenceType=PRIMITIVE,getPropertyPath=age,path={synthetic-alias}.age,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'age' {originalText=age}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.flyex.bean.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.UserName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path={synthetic-alias}.userName,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[QUOTED_STRING] LiteralNode: ''\u674e\u7eee\u534e''

[03/04/19 05:07:23:023 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:07:23:023 CST] DEBUG ast.QueryTranslatorImpl: HQL: select age from com.flyex.bean.User where userName='李绮华'
[03/04/19 05:07:23:023 CST] DEBUG ast.QueryTranslatorImpl: SQL: select user0_.Age as col_0_0_ from user user0_ where user0_.UserName='李绮华'
[03/04/19 05:07:23:023 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:07:23:023 CST] DEBUG internal.JdbcResourceLocalTransactionCoordinatorImpl: JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:378)
	at org.hibernate.internal.AbstractSharedSessionContract.checkOpen(AbstractSharedSessionContract.java:355)
	at org.hibernate.engine.spi.SharedSessionContractImplementor.checkOpen(SharedSessionContractImplementor.java:138)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:697)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:23)
	at com.flyex.demo.UserDemo.main(UserDemo.java:30)
[03/04/19 05:07:51:051 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[03/04/19 05:07:51:051 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[03/04/19 05:07:51:051 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[03/04/19 05:07:51:051 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[03/04/19 05:07:51:051 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[03/04/19 05:07:51:051 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[03/04/19 05:07:51:051 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:07:51:051 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[03/04/19 05:07:52:052 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[03/04/19 05:07:52:052 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[03/04/19 05:07:52:052 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[03/04/19 05:07:52:052 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[03/04/19 05:07:52:052 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[03/04/19 05:07:52:052 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ddabb18
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@58e6d4b8
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@6ca0256d
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5be067de
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24fb6a80
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 05:07:52:052 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@18a3962d
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@18a3962d
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c9399a4
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fd46303
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60bdf15d
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@6e521c1e
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4ef27d66
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6a1d204a
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@6c6357f9
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c041b41
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c9168dc
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@32232e55
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@77307458
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21c64522
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7997b197
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11dee337
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@460f76a6
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55f3c410
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11acdc30
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@770d4269
[03/04/19 05:07:53:053 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a8ab068
[03/04/19 05:07:53:053 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:07:53:053 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:07:53:053 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[03/04/19 05:07:54:054 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:07:54:054 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:07:54:054 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[03/04/19 05:07:54:054 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[03/04/19 05:07:54:054 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[03/04/19 05:07:54:054 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:07:54:054 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:07:54:054 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[03/04/19 05:07:54:054 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[03/04/19 05:07:54:054 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[03/04/19 05:07:54:054 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:07:54:054 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[03/04/19 05:07:54:054 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[03/04/19 05:07:54:054 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[03/04/19 05:07:54:054 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[03/04/19 05:07:54:054 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:07:54:054 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[03/04/19 05:07:54:054 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[03/04/19 05:07:54:054 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[03/04/19 05:07:54:054 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[03/04/19 05:07:54:054 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[03/04/19 05:07:54:054 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[03/04/19 05:07:54:054 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[03/04/19 05:07:54:054 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.13
      major : 8
      minor : 0
[03/04/19 05:07:54:054 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[03/04/19 05:07:54:054 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[03/04/19 05:07:54:054 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[03/04/19 05:07:54:054 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[03/04/19 05:07:54:054 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[03/04/19 05:07:54:054 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[03/04/19 05:07:54:054 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66153688]
[03/04/19 05:07:54:054 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[03/04/19 05:07:54:054 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[03/04/19 05:07:54:054 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[03/04/19 05:07:54:054 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[03/04/19 05:07:54:054 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[03/04/19 05:07:54:054 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[03/04/19 05:07:54:054 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[03/04/19 05:07:54:054 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:07:54:054 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:07:54:054 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:07:54:054 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[03/04/19 05:07:54:054 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[03/04/19 05:07:54:054 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[03/04/19 05:07:54:054 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[03/04/19 05:07:54:054 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[03/04/19 05:07:54:054 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:07:54:054 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:07:54:054 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[03/04/19 05:07:54:054 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[03/04/19 05:07:54:054 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: SessionFactory name : null
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Statistics: disabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Default null ordering: NONE
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Query language substitutions: {}
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Named query checking : enabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Second-level cache: disabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: JDBC batch size: 15
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: JPA compliance - query : 
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[03/04/19 05:07:54:054 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[03/04/19 05:07:55:055 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[03/04/19 05:07:55:055 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.flyex.demo.UserDemo, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2127e66e, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[03/04/19 05:07:55:055 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[03/04/19 05:07:55:055 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[03/04/19 05:07:55:055 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@e57e5d6]
[03/04/19 05:07:55:055 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:07:55:055 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:07:55:055 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:07:55:055 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:07:55:055 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:07:55:055 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:07:55:055 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[03/04/19 05:07:55:055 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[03/04/19 05:07:55:055 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[03/04/19 05:07:55:055 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[03/04/19 05:07:55:055 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[03/04/19 05:07:55:055 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[03/04/19 05:07:55:055 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f5156a6]
[03/04/19 05:07:55:055 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@66de00f2]
[03/04/19 05:07:55:055 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:07:55:055 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:07:55:055 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:07:55:055 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:07:55:055 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:07:55:055 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:07:55:055 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:07:55:055 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@430b2699]
[03/04/19 05:07:55:055 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67536ae0]
[03/04/19 05:07:55:055 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:07:55:055 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:07:55:055 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:07:55:055 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:07:55:055 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:07:55:055 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:07:55:055 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:07:55:055 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:07:55:055 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:07:55:055 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[03/04/19 05:07:55:055 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[03/04/19 05:07:55:055 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[03/04/19 05:07:55:055 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[03/04/19 05:07:55:055 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[03/04/19 05:07:55:055 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[03/04/19 05:07:55:055 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[03/04/19 05:07:55:055 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e43829]
[03/04/19 05:07:55:055 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:07:55:055 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:07:55:055 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:07:55:055 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:07:55:055 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:07:55:055 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:07:55:055 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a44cfc0]
[03/04/19 05:07:55:055 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:07:55:055 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:07:55:055 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:07:55:055 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:07:55:055 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:07:55:055 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:07:55:055 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:07:55:055 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:07:55:055 CST] DEBUG mapping.Table: No alter strings for table : user
[03/04/19 05:07:55:055 CST] DEBUG mapping.Table: No alter strings for table : user2
[03/04/19 05:07:55:055 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[03/04/19 05:07:55:055 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[03/04/19 05:07:55:055 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:07:55:055 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:07:55:055 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[03/04/19 05:07:55:055 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[03/04/19 05:07:55:055 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2fd72332
[03/04/19 05:07:55:055 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 6ddee156-4eb0-49af-8b60-222c029a5130 (<unnamed>)
[03/04/19 05:07:55:055 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[03/04/19 05:07:55:055 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[03/04/19 05:07:55:055 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[03/04/19 05:07:55:055 CST] DEBUG internal.TransactionImpl: begin
[03/04/19 05:07:55:055 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@52454457
[03/04/19 05:07:55:055 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select age from com.flyex.bean.User where userName='李绮华'
[03/04/19 05:07:55:055 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:07:55:055 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'flyex'
    |  |        |  \-[IDENT] Node: 'bean'
    |  |        \-[IDENT] Node: 'User'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'age'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'userName'
          \-[QUOTED_STRING] Node: ''\u674e\u7eee\u534e''

[03/04/19 05:07:55:055 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[03/04/19 05:07:55:055 CST] DEBUG tree.FromElement: FromClause{level=1} : com.flyex.bean.User (<no alias>) -> user0_
[03/04/19 05:07:55:055 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:07:55:055 CST] DEBUG tree.DotNode: getDataType() : age -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:07:55:055 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.age -> user0_.Age
[03/04/19 05:07:55:055 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:07:55:055 CST] DEBUG tree.DotNode: getDataType() : userName -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:07:55:055 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.userName -> user0_.UserName
[03/04/19 05:07:55:055 CST] DEBUG antlr.HqlSqlBaseWalker: select : finishing up [level=1, statement=select]
[03/04/19 05:07:55:055 CST] DEBUG ast.HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} ( user0_.Age {synthetic-alias} age ) ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.UserName {synthetic-alias} userName ) '李绮华' ) ) )
[03/04/19 05:07:55:055 CST] DEBUG util.JoinProcessor: Using FROM fragment [user user0_]
[03/04/19 05:07:55:055 CST] DEBUG antlr.HqlSqlBaseWalker: select >> end [level=1, statement=select]
[03/04/19 05:07:55:055 CST] DEBUG ast.QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.Age' {propertyName=age,dereferenceType=PRIMITIVE,getPropertyPath=age,path={synthetic-alias}.age,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'age' {originalText=age}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.flyex.bean.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.UserName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path={synthetic-alias}.userName,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[QUOTED_STRING] LiteralNode: ''\u674e\u7eee\u534e''

[03/04/19 05:07:55:055 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:07:55:055 CST] DEBUG ast.QueryTranslatorImpl: HQL: select age from com.flyex.bean.User where userName='李绮华'
[03/04/19 05:07:55:055 CST] DEBUG ast.QueryTranslatorImpl: SQL: select user0_.Age as col_0_0_ from user user0_ where user0_.UserName='李绮华'
[03/04/19 05:07:55:055 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:07:55:055 CST] DEBUG internal.TransactionImpl: committing
[03/04/19 05:07:55:055 CST] DEBUG internal.JdbcResourceLocalTransactionCoordinatorImpl: Encountered failure rolling back failed commit
java.lang.IllegalStateException: org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl@570ba13 is closed
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.errorIfClosed(AbstractLogicalConnectionImplementor.java:37)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:135)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getConnectionForTransactionManagement(LogicalConnectionManagedImpl.java:254)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.rollback(AbstractLogicalConnectionImplementor.java:116)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.rollback(JdbcResourceLocalTransactionCoordinatorImpl.java:294)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:280)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104)
	at com.flyex.demo.UserDemo.main(UserDemo.java:33)
[03/04/19 05:08:22:022 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[03/04/19 05:08:22:022 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[03/04/19 05:08:22:022 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[03/04/19 05:08:23:023 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[03/04/19 05:08:23:023 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[03/04/19 05:08:23:023 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[03/04/19 05:08:23:023 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:08:23:023 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[03/04/19 05:08:23:023 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[03/04/19 05:08:23:023 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[03/04/19 05:08:23:023 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[03/04/19 05:08:23:023 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[03/04/19 05:08:23:023 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[03/04/19 05:08:23:023 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f1c5af9
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@63192798
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@376a312c
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@77602954
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@77602954
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@77602954
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@73c60324
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@73c60324
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73c60324
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@24bdb479
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@24bdb479
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@24bdb479
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@533377b
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@533377b
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@533377b
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@58670130
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@58670130
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58670130
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46f699d5
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46f699d5
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@162be91c
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@162be91c
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@f74e835
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@f74e835
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@19fe4644
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@18245eb0
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@4ae33a11
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@4ae33a11
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@2a3591c5
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2a3591c5
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@423e4cbb
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@423e4cbb
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6256ac4f
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6256ac4f
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@757d6814
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@757d6814
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@36b0fcd5
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@36b0fcd5
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@226642a5
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@226642a5
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4fe89c24
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4fe89c24
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cf92cc7
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cf92cc7
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@52500920
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@52500920
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@452ba1db
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@452ba1db
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5ac86ba5
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5e8f9e2d
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@60fa3495
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60fa3495
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@5fcacc0
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fcacc0
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d71006f
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d71006f
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@5f3b9c57
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f3b9c57
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2484f433
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2484f433
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7c22d4f
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@37f21974
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@5d5d9e5
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@40dd3977
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@4b6579e8
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@493dfb8e
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@493dfb8e
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f162cc0
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@669513d8
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@669513d8
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@7876d598
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7876d598
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4985cbcb
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@549621f3
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@7bf9b098
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@b672aa8
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@b672aa8
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5cc69cfe
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@29cfd92b
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21c64522
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7997b197
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@11dee337
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@460f76a6
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55f3c410
[03/04/19 05:08:24:024 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11acdc30
[03/04/19 05:08:24:024 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:08:24:024 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:08:24:024 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[03/04/19 05:08:25:025 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:08:25:025 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:08:25:025 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[03/04/19 05:08:25:025 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[03/04/19 05:08:25:025 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[03/04/19 05:08:25:025 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:08:25:025 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:08:25:025 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[03/04/19 05:08:25:025 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[03/04/19 05:08:25:025 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[03/04/19 05:08:25:025 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:08:25:025 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[03/04/19 05:08:25:025 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[03/04/19 05:08:25:025 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[03/04/19 05:08:25:025 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[03/04/19 05:08:25:025 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:08:25:025 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[03/04/19 05:08:25:025 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[03/04/19 05:08:25:025 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[03/04/19 05:08:25:025 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[03/04/19 05:08:25:025 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[03/04/19 05:08:25:025 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[03/04/19 05:08:25:025 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[03/04/19 05:08:26:026 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.13
      major : 8
      minor : 0
[03/04/19 05:08:26:026 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[03/04/19 05:08:26:026 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[03/04/19 05:08:26:026 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[03/04/19 05:08:26:026 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[03/04/19 05:08:26:026 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[03/04/19 05:08:26:026 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[03/04/19 05:08:26:026 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@552ed807] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3971f0fe]
[03/04/19 05:08:26:026 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[03/04/19 05:08:26:026 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[03/04/19 05:08:26:026 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[03/04/19 05:08:26:026 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[03/04/19 05:08:26:026 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[03/04/19 05:08:26:026 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[03/04/19 05:08:26:026 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[03/04/19 05:08:26:026 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:08:26:026 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:08:26:026 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:08:26:026 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[03/04/19 05:08:26:026 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[03/04/19 05:08:26:026 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[03/04/19 05:08:26:026 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[03/04/19 05:08:26:026 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[03/04/19 05:08:26:026 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:08:26:026 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:08:26:026 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[03/04/19 05:08:26:026 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[03/04/19 05:08:26:026 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: SessionFactory name : null
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Statistics: disabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Default null ordering: NONE
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Query language substitutions: {}
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Named query checking : enabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Second-level cache: disabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: JDBC batch size: 15
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: JPA compliance - query : 
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[03/04/19 05:08:26:026 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[03/04/19 05:08:26:026 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[03/04/19 05:08:26:026 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.flyex.demo.UserDemo, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6ede46f6, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[03/04/19 05:08:26:026 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[03/04/19 05:08:26:026 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[03/04/19 05:08:26:026 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@552ed807] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22a6e998]
[03/04/19 05:08:26:026 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:08:26:026 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:08:27:027 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:08:27:027 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:08:27:027 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:08:27:027 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:08:27:027 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[03/04/19 05:08:27:027 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[03/04/19 05:08:27:027 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[03/04/19 05:08:27:027 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[03/04/19 05:08:27:027 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[03/04/19 05:08:27:027 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[03/04/19 05:08:27:027 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33379242]
[03/04/19 05:08:27:027 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5b20706]
[03/04/19 05:08:27:027 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:08:27:027 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:08:27:027 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:08:27:027 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:08:27:027 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:08:27:027 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:08:27:027 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:08:27:027 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f939a0f]
[03/04/19 05:08:27:027 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@45658133]
[03/04/19 05:08:27:027 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:08:27:027 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:08:27:027 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:08:27:027 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:08:27:027 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:08:27:027 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:08:27:027 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:08:27:027 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:08:27:027 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:08:27:027 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[03/04/19 05:08:27:027 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[03/04/19 05:08:27:027 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[03/04/19 05:08:27:027 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[03/04/19 05:08:27:027 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[03/04/19 05:08:27:027 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[03/04/19 05:08:27:027 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[03/04/19 05:08:27:027 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6215366a]
[03/04/19 05:08:27:027 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:08:27:027 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:08:27:027 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:08:27:027 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:08:27:027 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:08:27:027 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:08:27:027 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fa4f485]
[03/04/19 05:08:27:027 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:08:27:027 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:08:27:027 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:08:27:027 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:08:27:027 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:08:27:027 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:08:27:027 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:08:27:027 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:08:27:027 CST] DEBUG mapping.Table: No alter strings for table : user
[03/04/19 05:08:27:027 CST] DEBUG mapping.Table: No alter strings for table : user2
[03/04/19 05:08:27:027 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[03/04/19 05:08:27:027 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[03/04/19 05:08:27:027 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:08:27:027 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:08:27:027 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[03/04/19 05:08:27:027 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[03/04/19 05:08:27:027 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@bf75b5c
[03/04/19 05:08:27:027 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 28ff79ef-ef7d-4aae-9ecd-6b159875e2aa (<unnamed>)
[03/04/19 05:08:27:027 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[03/04/19 05:08:27:027 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[03/04/19 05:08:27:027 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[03/04/19 05:08:27:027 CST] DEBUG internal.TransactionImpl: begin
[03/04/19 05:08:27:027 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ab35b9c
[03/04/19 05:08:27:027 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select age from com.flyex.bean.User where userName='李绮华'
[03/04/19 05:08:27:027 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:08:27:027 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'flyex'
    |  |        |  \-[IDENT] Node: 'bean'
    |  |        \-[IDENT] Node: 'User'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'age'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'userName'
          \-[QUOTED_STRING] Node: ''\u674e\u7eee\u534e''

[03/04/19 05:08:27:027 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[03/04/19 05:08:27:027 CST] DEBUG tree.FromElement: FromClause{level=1} : com.flyex.bean.User (<no alias>) -> user0_
[03/04/19 05:08:27:027 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:08:27:027 CST] DEBUG tree.DotNode: getDataType() : age -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:08:27:027 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.age -> user0_.Age
[03/04/19 05:08:27:027 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:08:27:027 CST] DEBUG tree.DotNode: getDataType() : userName -> org.hibernate.type.StringType@f74e835
[03/04/19 05:08:27:027 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.userName -> user0_.UserName
[03/04/19 05:08:27:027 CST] DEBUG antlr.HqlSqlBaseWalker: select : finishing up [level=1, statement=select]
[03/04/19 05:08:27:027 CST] DEBUG ast.HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} ( user0_.Age {synthetic-alias} age ) ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.UserName {synthetic-alias} userName ) '李绮华' ) ) )
[03/04/19 05:08:27:027 CST] DEBUG util.JoinProcessor: Using FROM fragment [user user0_]
[03/04/19 05:08:27:027 CST] DEBUG antlr.HqlSqlBaseWalker: select >> end [level=1, statement=select]
[03/04/19 05:08:27:027 CST] DEBUG ast.QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.Age' {propertyName=age,dereferenceType=PRIMITIVE,getPropertyPath=age,path={synthetic-alias}.age,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'age' {originalText=age}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.flyex.bean.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.UserName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path={synthetic-alias}.userName,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[QUOTED_STRING] LiteralNode: ''\u674e\u7eee\u534e''

[03/04/19 05:08:27:027 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:08:27:027 CST] DEBUG ast.QueryTranslatorImpl: HQL: select age from com.flyex.bean.User where userName='李绮华'
[03/04/19 05:08:27:027 CST] DEBUG ast.QueryTranslatorImpl: SQL: select user0_.Age as col_0_0_ from user user0_ where user0_.UserName='李绮华'
[03/04/19 05:08:27:027 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:08:27:027 CST] DEBUG internal.TransactionImpl: committing
[03/04/19 05:08:27:027 CST] DEBUG internal.JdbcResourceLocalTransactionCoordinatorImpl: Encountered failure rolling back failed commit
java.lang.IllegalStateException: org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl@77724cbe is closed
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.errorIfClosed(AbstractLogicalConnectionImplementor.java:37)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:135)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getConnectionForTransactionManagement(LogicalConnectionManagedImpl.java:254)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.rollback(AbstractLogicalConnectionImplementor.java:116)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.rollback(JdbcResourceLocalTransactionCoordinatorImpl.java:294)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:280)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104)
	at com.flyex.demo.UserDemo.main(UserDemo.java:33)
[03/04/19 05:11:11:011 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[03/04/19 05:11:11:011 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[03/04/19 05:11:11:011 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[03/04/19 05:11:11:011 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[03/04/19 05:11:11:011 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[03/04/19 05:11:11:011 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[03/04/19 05:11:11:011 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:11:11:011 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[03/04/19 05:11:12:012 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[03/04/19 05:11:12:012 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[03/04/19 05:11:12:012 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[03/04/19 05:11:12:012 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[03/04/19 05:11:12:012 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[03/04/19 05:11:12:012 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ddabb18
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@58e6d4b8
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@6ca0256d
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5be067de
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24fb6a80
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@18a3962d
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@18a3962d
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c9399a4
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fd46303
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60bdf15d
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@6e521c1e
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4ef27d66
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6a1d204a
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@6c6357f9
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c041b41
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c9168dc
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@32232e55
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@77307458
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21c64522
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7997b197
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11dee337
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@460f76a6
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55f3c410
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11acdc30
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@770d4269
[03/04/19 05:11:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a8ab068
[03/04/19 05:11:13:013 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:11:13:013 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:11:13:013 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[03/04/19 05:11:14:014 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:11:14:014 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:11:14:014 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[03/04/19 05:11:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[03/04/19 05:11:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[03/04/19 05:11:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:11:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:11:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[03/04/19 05:11:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[03/04/19 05:11:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[03/04/19 05:11:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:11:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[03/04/19 05:11:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[03/04/19 05:11:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[03/04/19 05:11:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[03/04/19 05:11:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:11:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[03/04/19 05:11:14:014 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[03/04/19 05:11:14:014 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[03/04/19 05:11:14:014 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[03/04/19 05:11:14:014 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[03/04/19 05:11:14:014 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[03/04/19 05:11:14:014 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[03/04/19 05:11:14:014 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.13
      major : 8
      minor : 0
[03/04/19 05:11:14:014 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[03/04/19 05:11:14:014 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[03/04/19 05:11:14:014 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[03/04/19 05:11:15:015 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[03/04/19 05:11:15:015 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[03/04/19 05:11:15:015 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[03/04/19 05:11:15:015 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66153688]
[03/04/19 05:11:15:015 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[03/04/19 05:11:15:015 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[03/04/19 05:11:15:015 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[03/04/19 05:11:15:015 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[03/04/19 05:11:15:015 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[03/04/19 05:11:15:015 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[03/04/19 05:11:15:015 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[03/04/19 05:11:15:015 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:11:15:015 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:11:15:015 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:11:15:015 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[03/04/19 05:11:15:015 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[03/04/19 05:11:15:015 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[03/04/19 05:11:15:015 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[03/04/19 05:11:15:015 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[03/04/19 05:11:15:015 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:11:15:015 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:11:15:015 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[03/04/19 05:11:15:015 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[03/04/19 05:11:15:015 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: SessionFactory name : null
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Statistics: disabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Default null ordering: NONE
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Query language substitutions: {}
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Named query checking : enabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Second-level cache: disabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: JDBC batch size: 15
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: JPA compliance - query : 
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[03/04/19 05:11:15:015 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[03/04/19 05:11:15:015 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[03/04/19 05:11:15:015 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.flyex.demo.UserDemo, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2127e66e, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[03/04/19 05:11:15:015 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[03/04/19 05:11:15:015 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[03/04/19 05:11:15:015 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@e57e5d6]
[03/04/19 05:11:15:015 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:11:15:015 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:11:15:015 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:11:15:015 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:11:15:015 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:11:15:015 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:11:15:015 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[03/04/19 05:11:15:015 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[03/04/19 05:11:15:015 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[03/04/19 05:11:15:015 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[03/04/19 05:11:15:015 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[03/04/19 05:11:15:015 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[03/04/19 05:11:15:015 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f5156a6]
[03/04/19 05:11:15:015 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@66de00f2]
[03/04/19 05:11:15:015 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:11:15:015 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:11:15:015 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:11:15:015 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:11:15:015 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:11:15:015 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:11:15:015 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:11:15:015 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@430b2699]
[03/04/19 05:11:15:015 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67536ae0]
[03/04/19 05:11:15:015 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:11:15:015 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:11:15:015 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:11:15:015 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:11:15:015 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:11:15:015 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:11:15:015 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:11:15:015 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:11:15:015 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:11:15:015 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[03/04/19 05:11:15:015 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[03/04/19 05:11:15:015 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[03/04/19 05:11:15:015 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[03/04/19 05:11:15:015 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[03/04/19 05:11:15:015 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[03/04/19 05:11:15:015 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[03/04/19 05:11:15:015 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e43829]
[03/04/19 05:11:15:015 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:11:15:015 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:11:15:015 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:11:15:015 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:11:15:015 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:11:15:015 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:11:15:015 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a44cfc0]
[03/04/19 05:11:15:015 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:11:15:015 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:11:15:015 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:11:15:015 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:11:15:015 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:11:15:015 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:11:15:015 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:11:15:015 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:11:15:015 CST] DEBUG mapping.Table: No alter strings for table : user
[03/04/19 05:11:15:015 CST] DEBUG mapping.Table: No alter strings for table : user2
[03/04/19 05:11:15:015 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[03/04/19 05:11:15:015 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[03/04/19 05:11:15:015 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:11:15:015 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:11:15:015 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[03/04/19 05:11:15:015 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[03/04/19 05:11:15:015 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2fd72332
[03/04/19 05:11:15:015 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 42e552f1-36ce-4a9a-81ba-931d5a86f2d9 (<unnamed>)
[03/04/19 05:11:15:015 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[03/04/19 05:11:16:016 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[03/04/19 05:11:16:016 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7698b7a4
[03/04/19 05:11:16:016 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select age from com.flyex.bean.User where userName='李绮华'
[03/04/19 05:11:16:016 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:11:16:016 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'flyex'
    |  |        |  \-[IDENT] Node: 'bean'
    |  |        \-[IDENT] Node: 'User'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'age'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'userName'
          \-[QUOTED_STRING] Node: ''\u674e\u7eee\u534e''

[03/04/19 05:11:16:016 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[03/04/19 05:11:16:016 CST] DEBUG tree.FromElement: FromClause{level=1} : com.flyex.bean.User (<no alias>) -> user0_
[03/04/19 05:11:16:016 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:11:16:016 CST] DEBUG tree.DotNode: getDataType() : age -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:11:16:016 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.age -> user0_.Age
[03/04/19 05:11:16:016 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:11:16:016 CST] DEBUG tree.DotNode: getDataType() : userName -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:11:16:016 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.userName -> user0_.UserName
[03/04/19 05:11:16:016 CST] DEBUG antlr.HqlSqlBaseWalker: select : finishing up [level=1, statement=select]
[03/04/19 05:11:16:016 CST] DEBUG ast.HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} ( user0_.Age {synthetic-alias} age ) ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.UserName {synthetic-alias} userName ) '李绮华' ) ) )
[03/04/19 05:11:16:016 CST] DEBUG util.JoinProcessor: Using FROM fragment [user user0_]
[03/04/19 05:11:16:016 CST] DEBUG antlr.HqlSqlBaseWalker: select >> end [level=1, statement=select]
[03/04/19 05:11:16:016 CST] DEBUG ast.QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.Age' {propertyName=age,dereferenceType=PRIMITIVE,getPropertyPath=age,path={synthetic-alias}.age,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'age' {originalText=age}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.flyex.bean.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.UserName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path={synthetic-alias}.userName,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[QUOTED_STRING] LiteralNode: ''\u674e\u7eee\u534e''

[03/04/19 05:11:16:016 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:11:16:016 CST] DEBUG ast.QueryTranslatorImpl: HQL: select age from com.flyex.bean.User where userName='李绮华'
[03/04/19 05:11:16:016 CST] DEBUG ast.QueryTranslatorImpl: SQL: select user0_.Age as col_0_0_ from user user0_ where user0_.UserName='李绮华'
[03/04/19 05:11:16:016 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:11:16:016 CST] DEBUG internal.SessionFactoryImpl: HHH000031: Closing
[03/04/19 05:11:16:016 CST] DEBUG spi.TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7f3ca64a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@e57e5d6]
[03/04/19 05:11:16:016 CST] DEBUG internal.AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[03/04/19 05:11:16:016 CST]  INFO connections.pooling: HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/test]
[03/04/19 05:11:16:016 CST] DEBUG internal.BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[03/04/19 05:14:59:059 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[03/04/19 05:14:59:059 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[03/04/19 05:14:59:059 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[03/04/19 05:14:59:059 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[03/04/19 05:14:59:059 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[03/04/19 05:15:00:000 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[03/04/19 05:15:00:000 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:15:00:000 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[03/04/19 05:15:00:000 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[03/04/19 05:15:00:000 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[03/04/19 05:15:00:000 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[03/04/19 05:15:00:000 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[03/04/19 05:15:00:000 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[03/04/19 05:15:00:000 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ddabb18
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@58e6d4b8
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@6ca0256d
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5be067de
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24fb6a80
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@18a3962d
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@18a3962d
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c9399a4
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fd46303
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60bdf15d
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@6e521c1e
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4ef27d66
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6a1d204a
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@6c6357f9
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c041b41
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c9168dc
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@32232e55
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@77307458
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21c64522
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7997b197
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11dee337
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@460f76a6
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55f3c410
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11acdc30
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@770d4269
[03/04/19 05:15:01:001 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a8ab068
[03/04/19 05:15:01:001 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:15:01:001 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:15:01:001 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[03/04/19 05:15:02:002 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:15:02:002 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:15:02:002 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[03/04/19 05:15:02:002 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[03/04/19 05:15:02:002 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[03/04/19 05:15:02:002 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:15:02:002 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:15:02:002 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[03/04/19 05:15:02:002 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[03/04/19 05:15:02:002 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[03/04/19 05:15:02:002 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:15:02:002 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[03/04/19 05:15:02:002 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[03/04/19 05:15:02:002 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[03/04/19 05:15:02:002 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[03/04/19 05:15:02:002 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:15:02:002 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[03/04/19 05:15:02:002 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[03/04/19 05:15:02:002 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[03/04/19 05:15:02:002 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[03/04/19 05:15:02:002 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[03/04/19 05:15:02:002 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[03/04/19 05:15:02:002 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[03/04/19 05:15:03:003 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.13
      major : 8
      minor : 0
[03/04/19 05:15:03:003 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[03/04/19 05:15:03:003 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[03/04/19 05:15:03:003 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[03/04/19 05:15:03:003 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[03/04/19 05:15:03:003 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[03/04/19 05:15:03:003 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[03/04/19 05:15:03:003 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66153688]
[03/04/19 05:15:03:003 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[03/04/19 05:15:03:003 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[03/04/19 05:15:03:003 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[03/04/19 05:15:03:003 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[03/04/19 05:15:03:003 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[03/04/19 05:15:03:003 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[03/04/19 05:15:03:003 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[03/04/19 05:15:03:003 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:15:03:003 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:15:03:003 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:15:03:003 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[03/04/19 05:15:03:003 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[03/04/19 05:15:03:003 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[03/04/19 05:15:03:003 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[03/04/19 05:15:03:003 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[03/04/19 05:15:03:003 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:15:03:003 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:15:03:003 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[03/04/19 05:15:03:003 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[03/04/19 05:15:03:003 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: SessionFactory name : null
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Statistics: disabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Default null ordering: NONE
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Query language substitutions: {}
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Named query checking : enabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Second-level cache: disabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: JDBC batch size: 15
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: JPA compliance - query : 
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[03/04/19 05:15:03:003 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[03/04/19 05:15:03:003 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[03/04/19 05:15:03:003 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.flyex.demo.UserDemo, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2127e66e, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[03/04/19 05:15:03:003 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[03/04/19 05:15:03:003 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[03/04/19 05:15:03:003 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@e57e5d6]
[03/04/19 05:15:03:003 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:15:03:003 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:15:04:004 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:15:04:004 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:15:04:004 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:15:04:004 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:15:04:004 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[03/04/19 05:15:04:004 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[03/04/19 05:15:04:004 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[03/04/19 05:15:04:004 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[03/04/19 05:15:04:004 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[03/04/19 05:15:04:004 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[03/04/19 05:15:04:004 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f5156a6]
[03/04/19 05:15:04:004 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@66de00f2]
[03/04/19 05:15:04:004 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:15:04:004 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:15:04:004 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:15:04:004 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:15:04:004 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:15:04:004 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:15:04:004 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:15:04:004 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@430b2699]
[03/04/19 05:15:04:004 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67536ae0]
[03/04/19 05:15:04:004 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:15:04:004 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:15:04:004 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:15:04:004 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:15:04:004 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:15:04:004 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:15:04:004 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:15:04:004 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:15:04:004 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:15:04:004 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[03/04/19 05:15:04:004 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[03/04/19 05:15:04:004 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[03/04/19 05:15:04:004 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[03/04/19 05:15:04:004 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[03/04/19 05:15:04:004 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[03/04/19 05:15:04:004 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[03/04/19 05:15:04:004 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e43829]
[03/04/19 05:15:04:004 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:15:04:004 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:15:04:004 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:15:04:004 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:15:04:004 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:15:04:004 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:15:04:004 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a44cfc0]
[03/04/19 05:15:04:004 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:15:04:004 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:15:04:004 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:15:04:004 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:15:04:004 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:15:04:004 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:15:04:004 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:15:04:004 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:15:04:004 CST] DEBUG mapping.Table: No alter strings for table : user
[03/04/19 05:15:04:004 CST] DEBUG mapping.Table: No alter strings for table : user2
[03/04/19 05:15:04:004 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[03/04/19 05:15:04:004 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[03/04/19 05:15:04:004 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:15:04:004 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:15:04:004 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[03/04/19 05:15:04:004 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[03/04/19 05:15:04:004 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2fd72332
[03/04/19 05:15:04:004 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 8e71f26b-d2aa-4751-94c2-2a8f19532042 (<unnamed>)
[03/04/19 05:15:04:004 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[03/04/19 05:15:04:004 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[03/04/19 05:15:04:004 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[03/04/19 05:15:04:004 CST] DEBUG internal.TransactionImpl: begin
[03/04/19 05:15:04:004 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@52454457
[03/04/19 05:15:04:004 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select age from com.flyex.bean.User where userName='李绮华'
[03/04/19 05:15:04:004 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:15:04:004 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'flyex'
    |  |        |  \-[IDENT] Node: 'bean'
    |  |        \-[IDENT] Node: 'User'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'age'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'userName'
          \-[QUOTED_STRING] Node: ''\u674e\u7eee\u534e''

[03/04/19 05:15:04:004 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[03/04/19 05:15:04:004 CST] DEBUG tree.FromElement: FromClause{level=1} : com.flyex.bean.User (<no alias>) -> user0_
[03/04/19 05:15:04:004 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:15:04:004 CST] DEBUG tree.DotNode: getDataType() : age -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:15:04:004 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.age -> user0_.Age
[03/04/19 05:15:04:004 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:15:04:004 CST] DEBUG tree.DotNode: getDataType() : userName -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:15:04:004 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.userName -> user0_.UserName
[03/04/19 05:15:04:004 CST] DEBUG antlr.HqlSqlBaseWalker: select : finishing up [level=1, statement=select]
[03/04/19 05:15:04:004 CST] DEBUG ast.HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} ( user0_.Age {synthetic-alias} age ) ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.UserName {synthetic-alias} userName ) '李绮华' ) ) )
[03/04/19 05:15:04:004 CST] DEBUG util.JoinProcessor: Using FROM fragment [user user0_]
[03/04/19 05:15:04:004 CST] DEBUG antlr.HqlSqlBaseWalker: select >> end [level=1, statement=select]
[03/04/19 05:15:04:004 CST] DEBUG ast.QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.Age' {propertyName=age,dereferenceType=PRIMITIVE,getPropertyPath=age,path={synthetic-alias}.age,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'age' {originalText=age}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.flyex.bean.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.UserName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path={synthetic-alias}.userName,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[QUOTED_STRING] LiteralNode: ''\u674e\u7eee\u534e''

[03/04/19 05:15:04:004 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:15:04:004 CST] DEBUG ast.QueryTranslatorImpl: HQL: select age from com.flyex.bean.User where userName='李绮华'
[03/04/19 05:15:04:004 CST] DEBUG ast.QueryTranslatorImpl: SQL: select user0_.Age as col_0_0_ from user user0_ where user0_.UserName='李绮华'
[03/04/19 05:15:04:004 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:15:04:004 CST] DEBUG internal.TransactionImpl: committing
[03/04/19 05:15:04:004 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 05:15:04:004 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 05:15:04:004 CST] DEBUG internal.SessionFactoryImpl: HHH000031: Closing
[03/04/19 05:15:04:004 CST] DEBUG spi.TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@16d07cf3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@e57e5d6]
[03/04/19 05:15:04:004 CST] DEBUG internal.AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[03/04/19 05:15:04:004 CST]  INFO connections.pooling: HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/test]
[03/04/19 05:15:04:004 CST] DEBUG internal.BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[03/04/19 05:19:24:024 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[03/04/19 05:19:24:024 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[03/04/19 05:19:24:024 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[03/04/19 05:19:24:024 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[03/04/19 05:19:24:024 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[03/04/19 05:19:25:025 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[03/04/19 05:19:25:025 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:19:25:025 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[03/04/19 05:19:25:025 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[03/04/19 05:19:25:025 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[03/04/19 05:19:25:025 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[03/04/19 05:19:25:025 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[03/04/19 05:19:25:025 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[03/04/19 05:19:25:025 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ddabb18
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@58e6d4b8
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@6ca0256d
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5be067de
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24fb6a80
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@18a3962d
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@18a3962d
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c9399a4
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fd46303
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60bdf15d
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@6e521c1e
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4ef27d66
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6a1d204a
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@6c6357f9
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c041b41
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c9168dc
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@32232e55
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@77307458
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21c64522
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7997b197
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11dee337
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@460f76a6
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55f3c410
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11acdc30
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@770d4269
[03/04/19 05:19:26:026 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a8ab068
[03/04/19 05:19:26:026 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:19:26:026 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:19:26:026 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[03/04/19 05:19:27:027 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:19:27:027 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:19:27:027 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[03/04/19 05:19:27:027 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[03/04/19 05:19:27:027 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[03/04/19 05:19:27:027 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:19:27:027 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:19:27:027 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[03/04/19 05:19:27:027 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[03/04/19 05:19:27:027 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[03/04/19 05:19:27:027 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:19:27:027 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[03/04/19 05:19:27:027 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[03/04/19 05:19:27:027 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[03/04/19 05:19:27:027 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[03/04/19 05:19:27:027 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:19:27:027 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[03/04/19 05:19:27:027 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[03/04/19 05:19:27:027 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[03/04/19 05:19:27:027 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[03/04/19 05:19:27:027 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[03/04/19 05:19:27:027 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[03/04/19 05:19:27:027 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[03/04/19 05:19:28:028 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.13
      major : 8
      minor : 0
[03/04/19 05:19:28:028 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[03/04/19 05:19:28:028 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[03/04/19 05:19:28:028 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[03/04/19 05:19:28:028 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[03/04/19 05:19:28:028 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[03/04/19 05:19:28:028 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[03/04/19 05:19:28:028 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66153688]
[03/04/19 05:19:28:028 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[03/04/19 05:19:28:028 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[03/04/19 05:19:28:028 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[03/04/19 05:19:28:028 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[03/04/19 05:19:28:028 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[03/04/19 05:19:28:028 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[03/04/19 05:19:28:028 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[03/04/19 05:19:28:028 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:19:28:028 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:19:28:028 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:19:28:028 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[03/04/19 05:19:28:028 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[03/04/19 05:19:28:028 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[03/04/19 05:19:28:028 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[03/04/19 05:19:28:028 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[03/04/19 05:19:28:028 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:19:28:028 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:19:28:028 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[03/04/19 05:19:28:028 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[03/04/19 05:19:28:028 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: SessionFactory name : null
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Statistics: disabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Default null ordering: NONE
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Query language substitutions: {}
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Named query checking : enabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Second-level cache: disabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: JDBC batch size: 15
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: JPA compliance - query : 
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[03/04/19 05:19:28:028 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[03/04/19 05:19:28:028 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[03/04/19 05:19:28:028 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.flyex.demo.UserDemo, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2127e66e, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[03/04/19 05:19:28:028 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[03/04/19 05:19:28:028 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[03/04/19 05:19:28:028 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@e57e5d6]
[03/04/19 05:19:28:028 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:19:28:028 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:19:29:029 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:19:29:029 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:19:29:029 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:19:29:029 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:19:29:029 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[03/04/19 05:19:29:029 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[03/04/19 05:19:29:029 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[03/04/19 05:19:29:029 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[03/04/19 05:19:29:029 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[03/04/19 05:19:29:029 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[03/04/19 05:19:29:029 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f5156a6]
[03/04/19 05:19:29:029 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@66de00f2]
[03/04/19 05:19:29:029 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:19:29:029 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:19:29:029 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:19:29:029 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:19:29:029 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:19:29:029 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:19:29:029 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:19:29:029 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@430b2699]
[03/04/19 05:19:29:029 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67536ae0]
[03/04/19 05:19:29:029 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:19:29:029 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:19:29:029 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:19:29:029 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:19:29:029 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:19:29:029 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:19:29:029 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:19:29:029 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:19:29:029 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:19:29:029 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[03/04/19 05:19:29:029 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[03/04/19 05:19:29:029 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[03/04/19 05:19:29:029 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[03/04/19 05:19:29:029 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[03/04/19 05:19:29:029 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[03/04/19 05:19:29:029 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[03/04/19 05:19:29:029 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e43829]
[03/04/19 05:19:29:029 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:19:29:029 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:19:29:029 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:19:29:029 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:19:29:029 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:19:29:029 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:19:29:029 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a44cfc0]
[03/04/19 05:19:29:029 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:19:29:029 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:19:29:029 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:19:29:029 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:19:29:029 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:19:29:029 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:19:29:029 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:19:29:029 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:19:29:029 CST] DEBUG mapping.Table: No alter strings for table : user
[03/04/19 05:19:29:029 CST] DEBUG mapping.Table: No alter strings for table : user2
[03/04/19 05:19:29:029 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[03/04/19 05:19:29:029 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[03/04/19 05:19:29:029 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:19:29:029 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:19:29:029 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[03/04/19 05:19:29:029 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[03/04/19 05:19:29:029 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2fd72332
[03/04/19 05:19:29:029 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 08ec031b-7468-449f-b758-d352a8c0434d (<unnamed>)
[03/04/19 05:19:29:029 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[03/04/19 05:19:29:029 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[03/04/19 05:19:29:029 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[03/04/19 05:19:29:029 CST] DEBUG internal.TransactionImpl: begin
[03/04/19 05:19:29:029 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@52454457
[03/04/19 05:19:29:029 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select age from com.flyex.bean.User where userName='李绮华'
[03/04/19 05:19:29:029 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:19:29:029 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'flyex'
    |  |        |  \-[IDENT] Node: 'bean'
    |  |        \-[IDENT] Node: 'User'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'age'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'userName'
          \-[QUOTED_STRING] Node: ''\u674e\u7eee\u534e''

[03/04/19 05:19:29:029 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[03/04/19 05:19:29:029 CST] DEBUG tree.FromElement: FromClause{level=1} : com.flyex.bean.User (<no alias>) -> user0_
[03/04/19 05:19:29:029 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:19:29:029 CST] DEBUG tree.DotNode: getDataType() : age -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:19:29:029 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.age -> user0_.Age
[03/04/19 05:19:29:029 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:19:29:029 CST] DEBUG tree.DotNode: getDataType() : userName -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:19:29:029 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.userName -> user0_.UserName
[03/04/19 05:19:29:029 CST] DEBUG antlr.HqlSqlBaseWalker: select : finishing up [level=1, statement=select]
[03/04/19 05:19:29:029 CST] DEBUG ast.HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} ( user0_.Age {synthetic-alias} age ) ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.UserName {synthetic-alias} userName ) '李绮华' ) ) )
[03/04/19 05:19:29:029 CST] DEBUG util.JoinProcessor: Using FROM fragment [user user0_]
[03/04/19 05:19:29:029 CST] DEBUG antlr.HqlSqlBaseWalker: select >> end [level=1, statement=select]
[03/04/19 05:19:29:029 CST] DEBUG ast.QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.Age' {propertyName=age,dereferenceType=PRIMITIVE,getPropertyPath=age,path={synthetic-alias}.age,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'age' {originalText=age}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.flyex.bean.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.UserName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path={synthetic-alias}.userName,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[QUOTED_STRING] LiteralNode: ''\u674e\u7eee\u534e''

[03/04/19 05:19:29:029 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:19:29:029 CST] DEBUG ast.QueryTranslatorImpl: HQL: select age from com.flyex.bean.User where userName='李绮华'
[03/04/19 05:19:29:029 CST] DEBUG ast.QueryTranslatorImpl: SQL: select user0_.Age as col_0_0_ from user user0_ where user0_.UserName='李绮华'
[03/04/19 05:19:29:029 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:19:29:029 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select age from com.flyex.bean.User where userName='一块'
[03/04/19 05:19:29:029 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:19:29:029 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'flyex'
    |  |        |  \-[IDENT] Node: 'bean'
    |  |        \-[IDENT] Node: 'User'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'age'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'userName'
          \-[QUOTED_STRING] Node: ''\u4e00\u5757''

[03/04/19 05:19:29:029 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[03/04/19 05:19:29:029 CST] DEBUG tree.FromElement: FromClause{level=1} : com.flyex.bean.User (<no alias>) -> user0_
[03/04/19 05:19:29:029 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:19:29:029 CST] DEBUG tree.DotNode: getDataType() : age -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:19:29:029 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.age -> user0_.Age
[03/04/19 05:19:29:029 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:19:29:029 CST] DEBUG tree.DotNode: getDataType() : userName -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:19:29:029 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.userName -> user0_.UserName
[03/04/19 05:19:29:029 CST] DEBUG antlr.HqlSqlBaseWalker: select : finishing up [level=1, statement=select]
[03/04/19 05:19:29:029 CST] DEBUG ast.HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} ( user0_.Age {synthetic-alias} age ) ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.UserName {synthetic-alias} userName ) '一块' ) ) )
[03/04/19 05:19:29:029 CST] DEBUG util.JoinProcessor: Using FROM fragment [user user0_]
[03/04/19 05:19:29:029 CST] DEBUG antlr.HqlSqlBaseWalker: select >> end [level=1, statement=select]
[03/04/19 05:19:29:029 CST] DEBUG ast.QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.Age' {propertyName=age,dereferenceType=PRIMITIVE,getPropertyPath=age,path={synthetic-alias}.age,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'age' {originalText=age}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.flyex.bean.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.UserName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path={synthetic-alias}.userName,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[QUOTED_STRING] LiteralNode: ''\u4e00\u5757''

[03/04/19 05:19:29:029 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:19:29:029 CST] DEBUG ast.QueryTranslatorImpl: HQL: select age from com.flyex.bean.User where userName='一块'
[03/04/19 05:19:29:029 CST] DEBUG ast.QueryTranslatorImpl: SQL: select user0_.Age as col_0_0_ from user user0_ where user0_.UserName='一块'
[03/04/19 05:19:29:029 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:19:29:029 CST] DEBUG internal.TransactionImpl: committing
[03/04/19 05:19:29:029 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 05:19:29:029 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 05:19:29:029 CST] DEBUG internal.SessionFactoryImpl: HHH000031: Closing
[03/04/19 05:19:29:029 CST] DEBUG spi.TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@661d6bb6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@e57e5d6]
[03/04/19 05:19:29:029 CST] DEBUG internal.AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[03/04/19 05:19:29:029 CST]  INFO connections.pooling: HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/test]
[03/04/19 05:19:29:029 CST] DEBUG internal.BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[03/04/19 05:26:13:013 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[03/04/19 05:26:13:013 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[03/04/19 05:26:13:013 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[03/04/19 05:26:13:013 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[03/04/19 05:26:13:013 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[03/04/19 05:26:14:014 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[03/04/19 05:26:14:014 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:26:14:014 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[03/04/19 05:26:14:014 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[03/04/19 05:26:14:014 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[03/04/19 05:26:14:014 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[03/04/19 05:26:14:014 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[03/04/19 05:26:14:014 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[03/04/19 05:26:14:014 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[03/04/19 05:26:14:014 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@1bc715b8
[03/04/19 05:26:14:014 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@1bc715b8
[03/04/19 05:26:14:014 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1bc715b8
[03/04/19 05:26:14:014 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c55f277
[03/04/19 05:26:14:014 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@50eca7c6
[03/04/19 05:26:14:014 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@28d6290
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@e260766
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@e260766
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e260766
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@2cac4385
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@2cac4385
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2cac4385
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@71ae31b0
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@71ae31b0
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@71ae31b0
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@6a66a204
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@6a66a204
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6a66a204
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@7e3f95fe
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@7e3f95fe
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e3f95fe
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@3383649e
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@3383649e
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3383649e
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@74e47444
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@74e47444
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@74e47444
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@18518ccf
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@18518ccf
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2488b073
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2488b073
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@3276732
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@3276732
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@21d8bcbe
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c7d3c46
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@7a48e6e2
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@7a48e6e2
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@34a75079
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@34a75079
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@6e16b8b5
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6e16b8b5
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@44c79f32
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@44c79f32
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@649725e3
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@649725e3
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4fad94a7
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4fad94a7
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e809b79
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e809b79
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@55795845
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@55795845
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30ea8c23
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30ea8c23
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@117e0fe5
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@117e0fe5
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@2289aca5
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2289aca5
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@4a9f80d3
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4a9f80d3
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4a9f80d3
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6c67e137
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@172ca72b
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@172ca72b
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@172ca72b
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@51df223b
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@3e2822
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3e2822
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@533b266e
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@533b266e
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5b6813df
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5b6813df
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@1e044120
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e044120
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60b71e8f
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60b71e8f
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f59185e
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2b62442c
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2b62442c
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2b62442c
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@65e61854
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@65e61854
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@65e61854
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@5f4d427e
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@303e3593
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@25f7391e
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@25f7391e
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@25f7391e
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25bcd0c7
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25bcd0c7
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25bcd0c7
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@3a4e343
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@6fff253c
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@5d25e6bb
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d25e6bb
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5df417a7
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@3a1d593e
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3a1d593e
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@4a3e3e8b
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4a3e3e8b
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@72f46e16
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@54361a9
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@389adf1d
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@2fab4aff
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fab4aff
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@29cfd92b
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@21c64522
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7997b197
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11dee337
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@460f76a6
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@55f3c410
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@11acdc30
[03/04/19 05:26:15:015 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@770d4269
[03/04/19 05:26:15:015 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:26:15:015 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:26:15:015 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[03/04/19 05:26:16:016 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:26:16:016 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:26:16:016 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[03/04/19 05:26:16:016 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[03/04/19 05:26:16:016 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[03/04/19 05:26:16:016 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:26:16:016 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:26:16:016 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[03/04/19 05:26:16:016 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[03/04/19 05:26:16:016 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[03/04/19 05:26:16:016 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:26:16:016 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[03/04/19 05:26:16:016 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[03/04/19 05:26:16:016 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[03/04/19 05:26:16:016 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[03/04/19 05:26:16:016 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:26:16:016 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[03/04/19 05:26:16:016 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[03/04/19 05:26:16:016 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[03/04/19 05:26:16:016 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[03/04/19 05:26:16:016 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[03/04/19 05:26:16:016 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[03/04/19 05:26:16:016 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[03/04/19 05:26:16:016 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.13
      major : 8
      minor : 0
[03/04/19 05:26:16:016 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[03/04/19 05:26:16:016 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[03/04/19 05:26:16:016 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[03/04/19 05:26:16:016 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[03/04/19 05:26:17:017 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[03/04/19 05:26:17:017 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[03/04/19 05:26:17:017 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3971f0fe] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@23940f86]
[03/04/19 05:26:17:017 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[03/04/19 05:26:17:017 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[03/04/19 05:26:17:017 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[03/04/19 05:26:17:017 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[03/04/19 05:26:17:017 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[03/04/19 05:26:17:017 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[03/04/19 05:26:17:017 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[03/04/19 05:26:17:017 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:26:17:017 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:26:17:017 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:26:17:017 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[03/04/19 05:26:17:017 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[03/04/19 05:26:17:017 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[03/04/19 05:26:17:017 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[03/04/19 05:26:17:017 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[03/04/19 05:26:17:017 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:26:17:017 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:26:17:017 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[03/04/19 05:26:17:017 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[03/04/19 05:26:17:017 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: SessionFactory name : null
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Statistics: disabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Default null ordering: NONE
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Query language substitutions: {}
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Named query checking : enabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Second-level cache: disabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: JDBC batch size: 15
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: JPA compliance - query : 
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[03/04/19 05:26:17:017 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[03/04/19 05:26:17:017 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[03/04/19 05:26:17:017 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.flyex.demo.UserDemo, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@66273da0, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[03/04/19 05:26:17:017 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[03/04/19 05:26:17:017 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[03/04/19 05:26:17:017 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3971f0fe] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@55e42449]
[03/04/19 05:26:17:017 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:26:17:017 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:26:17:017 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:26:17:017 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:26:17:017 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:26:17:017 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:26:17:017 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[03/04/19 05:26:17:017 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[03/04/19 05:26:17:017 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[03/04/19 05:26:17:017 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[03/04/19 05:26:17:017 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[03/04/19 05:26:17:017 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[03/04/19 05:26:17:017 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e32fc22]
[03/04/19 05:26:17:017 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@16aed49f]
[03/04/19 05:26:17:017 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:26:17:017 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:26:17:017 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:26:17:017 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:26:17:017 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:26:17:017 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:26:17:017 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:26:17:017 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45658133]
[03/04/19 05:26:17:017 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@430b2699]
[03/04/19 05:26:17:017 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:26:17:017 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:26:17:017 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:26:17:017 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:26:17:017 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:26:17:017 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:26:17:017 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:26:17:017 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:26:17:017 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:26:17:017 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[03/04/19 05:26:17:017 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[03/04/19 05:26:17:017 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[03/04/19 05:26:17:017 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[03/04/19 05:26:17:017 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[03/04/19 05:26:17:017 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[03/04/19 05:26:17:017 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[03/04/19 05:26:17:017 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46dcbeab]
[03/04/19 05:26:17:017 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:26:17:017 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:26:17:017 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:26:17:017 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:26:17:017 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:26:17:017 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:26:17:017 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68dd39d2]
[03/04/19 05:26:17:017 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:26:17:017 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:26:17:017 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:26:17:017 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:26:17:017 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:26:17:017 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:26:17:017 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:26:17:017 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:26:17:017 CST] DEBUG mapping.Table: No alter strings for table : user
[03/04/19 05:26:17:017 CST] DEBUG mapping.Table: No alter strings for table : user2
[03/04/19 05:26:17:017 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[03/04/19 05:26:17:017 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[03/04/19 05:26:17:017 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:26:17:017 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:26:17:017 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[03/04/19 05:26:17:017 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[03/04/19 05:26:17:017 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@16da476c
[03/04/19 05:26:17:017 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 49c85180-8f15-46e6-8a1b-5de3a01fcf1b (<unnamed>)
[03/04/19 05:26:17:017 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[03/04/19 05:26:18:018 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[03/04/19 05:26:18:018 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[03/04/19 05:26:18:018 CST] DEBUG internal.TransactionImpl: begin
[03/04/19 05:26:18:018 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7741d346
[03/04/19 05:26:18:018 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select age from com.flyex.bean.User where userName='一块'
[03/04/19 05:26:18:018 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:26:18:018 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'flyex'
    |  |        |  \-[IDENT] Node: 'bean'
    |  |        \-[IDENT] Node: 'User'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'age'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'userName'
          \-[QUOTED_STRING] Node: ''\u4e00\u5757''

[03/04/19 05:26:18:018 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[03/04/19 05:26:18:018 CST] DEBUG tree.FromElement: FromClause{level=1} : com.flyex.bean.User (<no alias>) -> user0_
[03/04/19 05:26:18:018 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:26:18:018 CST] DEBUG tree.DotNode: getDataType() : age -> org.hibernate.type.IntegerType@6a66a204
[03/04/19 05:26:18:018 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.age -> user0_.Age
[03/04/19 05:26:18:018 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:26:18:018 CST] DEBUG tree.DotNode: getDataType() : userName -> org.hibernate.type.StringType@3276732
[03/04/19 05:26:18:018 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.userName -> user0_.UserName
[03/04/19 05:26:18:018 CST] DEBUG antlr.HqlSqlBaseWalker: select : finishing up [level=1, statement=select]
[03/04/19 05:26:18:018 CST] DEBUG ast.HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} ( user0_.Age {synthetic-alias} age ) ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.UserName {synthetic-alias} userName ) '一块' ) ) )
[03/04/19 05:26:18:018 CST] DEBUG util.JoinProcessor: Using FROM fragment [user user0_]
[03/04/19 05:26:18:018 CST] DEBUG antlr.HqlSqlBaseWalker: select >> end [level=1, statement=select]
[03/04/19 05:26:18:018 CST] DEBUG ast.QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.Age' {propertyName=age,dereferenceType=PRIMITIVE,getPropertyPath=age,path={synthetic-alias}.age,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'age' {originalText=age}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.flyex.bean.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.UserName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path={synthetic-alias}.userName,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[QUOTED_STRING] LiteralNode: ''\u4e00\u5757''

[03/04/19 05:26:18:018 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:26:18:018 CST] DEBUG ast.QueryTranslatorImpl: HQL: select age from com.flyex.bean.User where userName='一块'
[03/04/19 05:26:18:018 CST] DEBUG ast.QueryTranslatorImpl: SQL: select user0_.Age as col_0_0_ from user user0_ where user0_.UserName='一块'
[03/04/19 05:26:18:018 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:26:18:018 CST] DEBUG internal.TransactionImpl: committing
[03/04/19 05:26:18:018 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 05:26:18:018 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 05:26:18:018 CST] DEBUG internal.SessionFactoryImpl: HHH000031: Closing
[03/04/19 05:26:18:018 CST] DEBUG spi.TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@525b1b70] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@55e42449]
[03/04/19 05:26:18:018 CST] DEBUG internal.AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[03/04/19 05:26:18:018 CST]  INFO connections.pooling: HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/test]
[03/04/19 05:26:18:018 CST] DEBUG internal.BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[03/04/19 05:35:05:005 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[03/04/19 05:35:06:006 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[03/04/19 05:35:06:006 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[03/04/19 05:35:06:006 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[03/04/19 05:35:06:006 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[03/04/19 05:35:06:006 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[03/04/19 05:35:06:006 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:35:06:006 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[03/04/19 05:35:06:006 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[03/04/19 05:35:06:006 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[03/04/19 05:35:06:006 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[03/04/19 05:35:07:007 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[03/04/19 05:35:07:007 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[03/04/19 05:35:07:007 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@292d1c71
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ddabb18
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@58e6d4b8
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@6ca0256d
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c3dec30
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6731787b
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ba534b0
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@34625ccd
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10fde30a
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9bd0fa6
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1991f767
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c9f0a20
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5be067de
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24fb6a80
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@b40bb6e
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@346a361
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43b4fe19
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@18a3962d
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@18a3962d
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a36b71
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35beb15e
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c9399a4
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5bda80bf
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fd46303
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79e18e38
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d1d4d7
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2606b
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cf23c81
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1255b1d1
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60bdf15d
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@66629f63
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1568159
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@6e521c1e
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4ef27d66
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3f23a3a0
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32cb636e
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6a1d204a
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@6c6357f9
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ce5a68e
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c041b41
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a8a60bc
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5af28b27
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c9168dc
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@32232e55
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@77307458
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ec0c838
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21c64522
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7997b197
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11dee337
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@460f76a6
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55f3c410
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11acdc30
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@770d4269
[03/04/19 05:35:07:007 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a8ab068
[03/04/19 05:35:07:007 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:35:07:007 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:35:07:007 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[03/04/19 05:35:08:008 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:35:08:008 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:35:08:008 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[03/04/19 05:35:08:008 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[03/04/19 05:35:08:008 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[03/04/19 05:35:08:008 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:35:08:008 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:35:08:008 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[03/04/19 05:35:08:008 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[03/04/19 05:35:08:008 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[03/04/19 05:35:08:008 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:35:08:008 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[03/04/19 05:35:08:008 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[03/04/19 05:35:08:008 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[03/04/19 05:35:08:008 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[03/04/19 05:35:08:008 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:35:08:008 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[03/04/19 05:35:08:008 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[03/04/19 05:35:08:008 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[03/04/19 05:35:08:008 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[03/04/19 05:35:08:008 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[03/04/19 05:35:08:008 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[03/04/19 05:35:08:008 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[03/04/19 05:35:09:009 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.13
      major : 8
      minor : 0
[03/04/19 05:35:09:009 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[03/04/19 05:35:09:009 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[03/04/19 05:35:09:009 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[03/04/19 05:35:09:009 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[03/04/19 05:35:09:009 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[03/04/19 05:35:09:009 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[03/04/19 05:35:09:009 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66153688]
[03/04/19 05:35:09:009 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[03/04/19 05:35:09:009 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[03/04/19 05:35:09:009 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[03/04/19 05:35:09:009 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[03/04/19 05:35:09:009 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[03/04/19 05:35:09:009 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[03/04/19 05:35:09:009 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[03/04/19 05:35:09:009 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:35:09:009 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:35:09:009 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:35:09:009 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[03/04/19 05:35:09:009 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[03/04/19 05:35:09:009 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[03/04/19 05:35:09:009 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[03/04/19 05:35:09:009 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[03/04/19 05:35:09:009 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:35:09:009 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:35:09:009 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[03/04/19 05:35:09:009 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[03/04/19 05:35:09:009 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: SessionFactory name : null
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Statistics: disabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Default null ordering: NONE
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Query language substitutions: {}
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Named query checking : enabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Second-level cache: disabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: JDBC batch size: 15
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: JPA compliance - query : 
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[03/04/19 05:35:09:009 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[03/04/19 05:35:09:009 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[03/04/19 05:35:09:009 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.flyex.demo.UserDemo, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2127e66e, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[03/04/19 05:35:09:009 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[03/04/19 05:35:09:009 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[03/04/19 05:35:09:009 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23940f86] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@e57e5d6]
[03/04/19 05:35:09:009 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:35:09:009 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:35:09:009 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:35:09:009 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:35:09:009 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:35:09:009 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:35:09:009 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[03/04/19 05:35:09:009 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[03/04/19 05:35:09:009 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[03/04/19 05:35:09:009 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[03/04/19 05:35:09:009 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[03/04/19 05:35:09:009 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[03/04/19 05:35:09:009 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f5156a6]
[03/04/19 05:35:09:009 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@66de00f2]
[03/04/19 05:35:09:009 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:35:09:009 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:35:09:009 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:35:09:009 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:35:09:009 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:35:09:009 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:35:09:009 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:35:09:009 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@430b2699]
[03/04/19 05:35:09:009 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67536ae0]
[03/04/19 05:35:09:009 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:35:09:009 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:35:09:009 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:35:09:009 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:35:09:009 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:35:09:009 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:35:09:009 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:35:09:009 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:35:09:009 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:35:09:009 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[03/04/19 05:35:09:009 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[03/04/19 05:35:09:009 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[03/04/19 05:35:09:009 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[03/04/19 05:35:09:009 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[03/04/19 05:35:09:009 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[03/04/19 05:35:09:009 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[03/04/19 05:35:09:009 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e43829]
[03/04/19 05:35:09:009 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:35:09:009 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:35:09:009 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:35:09:009 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:35:09:009 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:35:09:009 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:35:09:009 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a44cfc0]
[03/04/19 05:35:09:009 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:35:09:009 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:35:09:009 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:35:09:009 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:35:09:009 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:35:09:009 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:35:09:009 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:35:09:009 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:35:10:010 CST] DEBUG mapping.Table: No alter strings for table : user
[03/04/19 05:35:10:010 CST] DEBUG mapping.Table: No alter strings for table : user2
[03/04/19 05:35:10:010 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[03/04/19 05:35:10:010 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[03/04/19 05:35:10:010 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:35:10:010 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:35:10:010 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[03/04/19 05:35:10:010 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[03/04/19 05:35:10:010 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2fd72332
[03/04/19 05:35:10:010 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 6a685f04-7f95-41d4-bd5d-4db6e665fc76 (<unnamed>)
[03/04/19 05:35:10:010 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[03/04/19 05:35:10:010 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[03/04/19 05:35:10:010 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[03/04/19 05:35:10:010 CST] DEBUG internal.TransactionImpl: begin
[03/04/19 05:35:10:010 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@52454457
[03/04/19 05:35:10:010 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select age from com.flyex.bean.User where userName='一块'
[03/04/19 05:35:10:010 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:35:10:010 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'flyex'
    |  |        |  \-[IDENT] Node: 'bean'
    |  |        \-[IDENT] Node: 'User'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'age'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'userName'
          \-[QUOTED_STRING] Node: ''\u4e00\u5757''

[03/04/19 05:35:10:010 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[03/04/19 05:35:10:010 CST] DEBUG tree.FromElement: FromClause{level=1} : com.flyex.bean.User (<no alias>) -> user0_
[03/04/19 05:35:10:010 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:35:10:010 CST] DEBUG tree.DotNode: getDataType() : age -> org.hibernate.type.IntegerType@5860f3d7
[03/04/19 05:35:10:010 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.age -> user0_.Age
[03/04/19 05:35:10:010 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:35:10:010 CST] DEBUG tree.DotNode: getDataType() : userName -> org.hibernate.type.StringType@3f28bd56
[03/04/19 05:35:10:010 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.userName -> user0_.UserName
[03/04/19 05:35:10:010 CST] DEBUG antlr.HqlSqlBaseWalker: select : finishing up [level=1, statement=select]
[03/04/19 05:35:10:010 CST] DEBUG ast.HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} ( user0_.Age {synthetic-alias} age ) ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.UserName {synthetic-alias} userName ) '一块' ) ) )
[03/04/19 05:35:10:010 CST] DEBUG util.JoinProcessor: Using FROM fragment [user user0_]
[03/04/19 05:35:10:010 CST] DEBUG antlr.HqlSqlBaseWalker: select >> end [level=1, statement=select]
[03/04/19 05:35:10:010 CST] DEBUG ast.QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.Age' {propertyName=age,dereferenceType=PRIMITIVE,getPropertyPath=age,path={synthetic-alias}.age,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'age' {originalText=age}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.flyex.bean.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.UserName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path={synthetic-alias}.userName,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[QUOTED_STRING] LiteralNode: ''\u4e00\u5757''

[03/04/19 05:35:10:010 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:35:10:010 CST] DEBUG ast.QueryTranslatorImpl: HQL: select age from com.flyex.bean.User where userName='一块'
[03/04/19 05:35:10:010 CST] DEBUG ast.QueryTranslatorImpl: SQL: select user0_.Age as col_0_0_ from user user0_ where user0_.UserName='一块'
[03/04/19 05:35:10:010 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:35:13:013 CST] DEBUG internal.TransactionImpl: committing
[03/04/19 05:35:13:013 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 05:35:13:013 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 05:35:13:013 CST] DEBUG internal.SessionFactoryImpl: HHH000031: Closing
[03/04/19 05:35:13:013 CST] DEBUG spi.TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@16d07cf3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@e57e5d6]
[03/04/19 05:35:13:013 CST] DEBUG internal.AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[03/04/19 05:35:13:013 CST]  INFO connections.pooling: HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/test]
[03/04/19 05:35:13:013 CST] DEBUG internal.BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[03/04/19 05:36:12:012 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[03/04/19 05:36:12:012 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[03/04/19 05:36:12:012 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[03/04/19 05:36:12:012 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[03/04/19 05:36:12:012 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[03/04/19 05:36:12:012 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[03/04/19 05:36:12:012 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:36:12:012 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[03/04/19 05:36:13:013 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[03/04/19 05:36:13:013 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[03/04/19 05:36:13:013 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[03/04/19 05:36:13:013 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[03/04/19 05:36:13:013 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[03/04/19 05:36:13:013 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f1c5af9
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@63192798
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@376a312c
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@77602954
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@77602954
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@77602954
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@73c60324
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@73c60324
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73c60324
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@24bdb479
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@24bdb479
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@24bdb479
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@533377b
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@533377b
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@533377b
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@58670130
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@58670130
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58670130
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46f699d5
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46f699d5
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@162be91c
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@162be91c
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@f74e835
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@f74e835
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@19fe4644
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@18245eb0
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@4ae33a11
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@4ae33a11
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@2a3591c5
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2a3591c5
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@423e4cbb
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@423e4cbb
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6256ac4f
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6256ac4f
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@757d6814
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@757d6814
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@36b0fcd5
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@36b0fcd5
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@226642a5
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@226642a5
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4fe89c24
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4fe89c24
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cf92cc7
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cf92cc7
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@52500920
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@52500920
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@452ba1db
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@452ba1db
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5ac86ba5
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5e8f9e2d
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@60fa3495
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60fa3495
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@5fcacc0
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fcacc0
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d71006f
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d71006f
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@5f3b9c57
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f3b9c57
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2484f433
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2484f433
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7c22d4f
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@37f21974
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@5d5d9e5
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@40dd3977
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@4b6579e8
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@493dfb8e
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@493dfb8e
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f162cc0
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@669513d8
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@669513d8
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@7876d598
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7876d598
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4985cbcb
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@549621f3
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@7bf9b098
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@b672aa8
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@b672aa8
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5cc69cfe
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@29cfd92b
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21c64522
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7997b197
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@11dee337
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@460f76a6
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55f3c410
[03/04/19 05:36:13:013 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11acdc30
[03/04/19 05:36:13:013 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:36:13:013 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:36:13:013 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[03/04/19 05:36:14:014 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:36:14:014 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:36:14:014 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[03/04/19 05:36:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[03/04/19 05:36:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[03/04/19 05:36:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:36:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:36:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[03/04/19 05:36:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[03/04/19 05:36:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[03/04/19 05:36:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:36:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[03/04/19 05:36:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[03/04/19 05:36:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[03/04/19 05:36:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[03/04/19 05:36:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:36:14:014 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[03/04/19 05:36:14:014 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[03/04/19 05:36:14:014 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[03/04/19 05:36:14:014 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[03/04/19 05:36:14:014 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[03/04/19 05:36:14:014 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[03/04/19 05:36:14:014 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[03/04/19 05:36:15:015 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.13
      major : 8
      minor : 0
[03/04/19 05:36:15:015 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[03/04/19 05:36:15:015 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[03/04/19 05:36:15:015 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[03/04/19 05:36:15:015 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[03/04/19 05:36:15:015 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[03/04/19 05:36:15:015 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[03/04/19 05:36:15:015 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@552ed807] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3971f0fe]
[03/04/19 05:36:15:015 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[03/04/19 05:36:15:015 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[03/04/19 05:36:15:015 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[03/04/19 05:36:15:015 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[03/04/19 05:36:15:015 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[03/04/19 05:36:15:015 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[03/04/19 05:36:15:015 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[03/04/19 05:36:15:015 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:36:15:015 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:36:15:015 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:36:15:015 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[03/04/19 05:36:15:015 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[03/04/19 05:36:15:015 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[03/04/19 05:36:15:015 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[03/04/19 05:36:15:015 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[03/04/19 05:36:15:015 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:36:15:015 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:36:15:015 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[03/04/19 05:36:15:015 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[03/04/19 05:36:15:015 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: SessionFactory name : null
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Statistics: disabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Default null ordering: NONE
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Query language substitutions: {}
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Named query checking : enabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Second-level cache: disabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: JDBC batch size: 15
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: JPA compliance - query : 
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[03/04/19 05:36:15:015 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[03/04/19 05:36:15:015 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[03/04/19 05:36:15:015 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.flyex.demo.UserDemo, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6ede46f6, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[03/04/19 05:36:15:015 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[03/04/19 05:36:15:015 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[03/04/19 05:36:15:015 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@552ed807] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22a6e998]
[03/04/19 05:36:15:015 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:36:15:015 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:36:16:016 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:36:16:016 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:36:16:016 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:36:16:016 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:36:16:016 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[03/04/19 05:36:16:016 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[03/04/19 05:36:16:016 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[03/04/19 05:36:16:016 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[03/04/19 05:36:16:016 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[03/04/19 05:36:16:016 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[03/04/19 05:36:16:016 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33379242]
[03/04/19 05:36:16:016 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5b20706]
[03/04/19 05:36:16:016 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:36:16:016 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:36:16:016 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:36:16:016 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:36:16:016 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:36:16:016 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:36:16:016 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:36:16:016 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f939a0f]
[03/04/19 05:36:16:016 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@45658133]
[03/04/19 05:36:16:016 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:36:16:016 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:36:16:016 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:36:16:016 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:36:16:016 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:36:16:016 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:36:16:016 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:36:16:016 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:36:16:016 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:36:16:016 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[03/04/19 05:36:16:016 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[03/04/19 05:36:16:016 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[03/04/19 05:36:16:016 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[03/04/19 05:36:16:016 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[03/04/19 05:36:16:016 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[03/04/19 05:36:16:016 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[03/04/19 05:36:16:016 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6215366a]
[03/04/19 05:36:16:016 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:36:16:016 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:36:16:016 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:36:16:016 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:36:16:016 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:36:16:016 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:36:16:016 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fa4f485]
[03/04/19 05:36:16:016 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:36:16:016 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:36:16:016 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:36:16:016 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:36:16:016 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:36:16:016 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:36:16:016 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:36:16:016 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:36:16:016 CST] DEBUG mapping.Table: No alter strings for table : user
[03/04/19 05:36:16:016 CST] DEBUG mapping.Table: No alter strings for table : user2
[03/04/19 05:36:16:016 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[03/04/19 05:36:16:016 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[03/04/19 05:36:16:016 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:36:16:016 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:36:16:016 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[03/04/19 05:36:16:016 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[03/04/19 05:36:16:016 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@bf75b5c
[03/04/19 05:36:16:016 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: f628b71b-bf1e-44d1-95b9-92581388e841 (<unnamed>)
[03/04/19 05:36:16:016 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[03/04/19 05:36:16:016 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[03/04/19 05:36:16:016 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[03/04/19 05:36:16:016 CST] DEBUG internal.TransactionImpl: begin
[03/04/19 05:36:16:016 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ab35b9c
[03/04/19 05:36:16:016 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select age from com.flyex.bean.User where userName='一块'
[03/04/19 05:36:16:016 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:36:16:016 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'flyex'
    |  |        |  \-[IDENT] Node: 'bean'
    |  |        \-[IDENT] Node: 'User'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'age'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'userName'
          \-[QUOTED_STRING] Node: ''\u4e00\u5757''

[03/04/19 05:36:16:016 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[03/04/19 05:36:16:016 CST] DEBUG tree.FromElement: FromClause{level=1} : com.flyex.bean.User (<no alias>) -> user0_
[03/04/19 05:36:16:016 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:36:16:016 CST] DEBUG tree.DotNode: getDataType() : age -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:36:16:016 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.age -> user0_.Age
[03/04/19 05:36:16:016 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:36:16:016 CST] DEBUG tree.DotNode: getDataType() : userName -> org.hibernate.type.StringType@f74e835
[03/04/19 05:36:16:016 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.userName -> user0_.UserName
[03/04/19 05:36:16:016 CST] DEBUG antlr.HqlSqlBaseWalker: select : finishing up [level=1, statement=select]
[03/04/19 05:36:16:016 CST] DEBUG ast.HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} ( user0_.Age {synthetic-alias} age ) ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.UserName {synthetic-alias} userName ) '一块' ) ) )
[03/04/19 05:36:16:016 CST] DEBUG util.JoinProcessor: Using FROM fragment [user user0_]
[03/04/19 05:36:16:016 CST] DEBUG antlr.HqlSqlBaseWalker: select >> end [level=1, statement=select]
[03/04/19 05:36:16:016 CST] DEBUG ast.QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.Age' {propertyName=age,dereferenceType=PRIMITIVE,getPropertyPath=age,path={synthetic-alias}.age,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'age' {originalText=age}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.flyex.bean.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.UserName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path={synthetic-alias}.userName,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[QUOTED_STRING] LiteralNode: ''\u4e00\u5757''

[03/04/19 05:36:16:016 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:36:16:016 CST] DEBUG ast.QueryTranslatorImpl: HQL: select age from com.flyex.bean.User where userName='一块'
[03/04/19 05:36:16:016 CST] DEBUG ast.QueryTranslatorImpl: SQL: select user0_.Age as col_0_0_ from user user0_ where user0_.UserName='一块'
[03/04/19 05:36:16:016 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:36:19:019 CST] DEBUG internal.TransactionImpl: committing
[03/04/19 05:36:19:019 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 05:36:19:019 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 05:36:19:019 CST] DEBUG internal.SessionFactoryImpl: HHH000031: Closing
[03/04/19 05:36:19:019 CST] DEBUG spi.TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@37a9b687] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@22a6e998]
[03/04/19 05:36:19:019 CST] DEBUG internal.AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[03/04/19 05:36:19:019 CST]  INFO connections.pooling: HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/test]
[03/04/19 05:36:19:019 CST] DEBUG internal.BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[03/04/19 05:37:16:016 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[03/04/19 05:37:16:016 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[03/04/19 05:37:16:016 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[03/04/19 05:37:16:016 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[03/04/19 05:37:16:016 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[03/04/19 05:37:16:016 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[03/04/19 05:37:16:016 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:37:16:016 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[03/04/19 05:37:17:017 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[03/04/19 05:37:17:017 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[03/04/19 05:37:17:017 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[03/04/19 05:37:17:017 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[03/04/19 05:37:17:017 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[03/04/19 05:37:17:017 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@470a696f
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f1c5af9
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@63192798
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@376a312c
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@77602954
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@77602954
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@77602954
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@40258c2f
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@73c60324
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@73c60324
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73c60324
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@24bdb479
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@24bdb479
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@24bdb479
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@533377b
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@533377b
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@533377b
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@58670130
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@58670130
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58670130
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46f699d5
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46f699d5
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@162be91c
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@162be91c
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@f74e835
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@f74e835
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@19fe4644
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@18245eb0
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@4ae33a11
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@4ae33a11
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@2a3591c5
[03/04/19 05:37:17:017 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2a3591c5
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@423e4cbb
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@423e4cbb
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6256ac4f
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6256ac4f
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@757d6814
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@757d6814
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@36b0fcd5
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@36b0fcd5
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@226642a5
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@226642a5
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4fe89c24
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4fe89c24
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cf92cc7
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cf92cc7
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@52500920
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@52500920
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@452ba1db
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@452ba1db
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@70dd7e15
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5ac86ba5
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c98290c
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5e8f9e2d
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@60fa3495
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60fa3495
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@5fcacc0
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fcacc0
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d71006f
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d71006f
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@5f3b9c57
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f3b9c57
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2484f433
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2484f433
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7c22d4f
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@28a0fd6c
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b5966e1
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@37f21974
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@5d5d9e5
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@674c583e
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31024624
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@40dd3977
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@4b6579e8
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@493dfb8e
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@493dfb8e
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f162cc0
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@669513d8
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@669513d8
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@7876d598
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7876d598
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4985cbcb
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@549621f3
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@7bf9b098
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@b672aa8
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@b672aa8
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5cc69cfe
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@29cfd92b
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21c64522
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7997b197
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@11dee337
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@460f76a6
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55f3c410
[03/04/19 05:37:18:018 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11acdc30
[03/04/19 05:37:18:018 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:37:18:018 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:37:18:018 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[03/04/19 05:37:18:018 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[03/04/19 05:37:18:018 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[03/04/19 05:37:18:018 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[03/04/19 05:37:18:018 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[03/04/19 05:37:18:018 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[03/04/19 05:37:18:018 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:37:18:018 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[03/04/19 05:37:18:018 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[03/04/19 05:37:18:018 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[03/04/19 05:37:18:018 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[03/04/19 05:37:18:018 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:37:18:018 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[03/04/19 05:37:18:018 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[03/04/19 05:37:18:018 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[03/04/19 05:37:18:018 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[03/04/19 05:37:18:018 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[03/04/19 05:37:18:018 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[03/04/19 05:37:18:018 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[03/04/19 05:37:18:018 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[03/04/19 05:37:18:018 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[03/04/19 05:37:18:018 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[03/04/19 05:37:18:018 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[03/04/19 05:37:18:018 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[03/04/19 05:37:19:019 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.13
      major : 8
      minor : 0
[03/04/19 05:37:19:019 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[03/04/19 05:37:19:019 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[03/04/19 05:37:19:019 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[03/04/19 05:37:19:019 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[03/04/19 05:37:19:019 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[03/04/19 05:37:19:019 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[03/04/19 05:37:19:019 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@552ed807] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3971f0fe]
[03/04/19 05:37:19:019 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[03/04/19 05:37:19:019 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[03/04/19 05:37:19:019 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[03/04/19 05:37:19:019 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[03/04/19 05:37:19:019 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[03/04/19 05:37:19:019 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[03/04/19 05:37:19:019 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[03/04/19 05:37:19:019 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:37:19:019 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:37:19:019 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[03/04/19 05:37:19:019 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[03/04/19 05:37:19:019 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[03/04/19 05:37:19:019 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[03/04/19 05:37:19:019 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[03/04/19 05:37:19:019 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[03/04/19 05:37:19:019 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:37:19:019 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:37:19:019 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[03/04/19 05:37:19:019 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[03/04/19 05:37:19:019 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: SessionFactory name : null
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Statistics: disabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Default null ordering: NONE
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Query language substitutions: {}
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Named query checking : enabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Second-level cache: disabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: JDBC batch size: 15
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: JPA compliance - query : 
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[03/04/19 05:37:19:019 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[03/04/19 05:37:19:019 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[03/04/19 05:37:19:019 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.flyex.demo.UserDemo, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6ede46f6, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[03/04/19 05:37:19:019 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[03/04/19 05:37:19:019 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[03/04/19 05:37:19:019 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@552ed807] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22a6e998]
[03/04/19 05:37:19:019 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[03/04/19 05:37:19:019 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[03/04/19 05:37:20:020 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:37:20:020 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:37:20:020 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[03/04/19 05:37:20:020 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[03/04/19 05:37:20:020 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[03/04/19 05:37:20:020 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[03/04/19 05:37:20:020 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[03/04/19 05:37:20:020 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[03/04/19 05:37:20:020 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[03/04/19 05:37:20:020 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[03/04/19 05:37:20:020 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33379242]
[03/04/19 05:37:20:020 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5b20706]
[03/04/19 05:37:20:020 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:37:20:020 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:37:20:020 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:37:20:020 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:37:20:020 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:37:20:020 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:37:20:020 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:37:20:020 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f939a0f]
[03/04/19 05:37:20:020 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@45658133]
[03/04/19 05:37:20:020 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[03/04/19 05:37:20:020 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[03/04/19 05:37:20:020 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[03/04/19 05:37:20:020 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:37:20:020 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:37:20:020 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[03/04/19 05:37:20:020 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:37:20:020 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:37:20:020 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[03/04/19 05:37:20:020 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[03/04/19 05:37:20:020 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[03/04/19 05:37:20:020 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[03/04/19 05:37:20:020 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[03/04/19 05:37:20:020 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[03/04/19 05:37:20:020 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[03/04/19 05:37:20:020 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[03/04/19 05:37:20:020 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6215366a]
[03/04/19 05:37:20:020 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:37:20:020 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:37:20:020 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:37:20:020 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:37:20:020 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:37:20:020 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:37:20:020 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fa4f485]
[03/04/19 05:37:20:020 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[03/04/19 05:37:20:020 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[03/04/19 05:37:20:020 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[03/04/19 05:37:20:020 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[03/04/19 05:37:20:020 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[03/04/19 05:37:20:020 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:37:20:020 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:37:20:020 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[03/04/19 05:37:20:020 CST] DEBUG mapping.Table: No alter strings for table : user
[03/04/19 05:37:20:020 CST] DEBUG mapping.Table: No alter strings for table : user2
[03/04/19 05:37:20:020 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[03/04/19 05:37:20:020 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[03/04/19 05:37:20:020 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:37:20:020 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[03/04/19 05:37:20:020 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[03/04/19 05:37:20:020 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[03/04/19 05:37:20:020 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@bf75b5c
[03/04/19 05:37:20:020 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 640532c1-c13d-4921-b7c1-f1f9bf6a1d94 (<unnamed>)
[03/04/19 05:37:20:020 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[03/04/19 05:37:20:020 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[03/04/19 05:37:20:020 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[03/04/19 05:37:20:020 CST] DEBUG internal.TransactionImpl: begin
[03/04/19 05:37:20:020 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ab35b9c
[03/04/19 05:37:20:020 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select age from com.flyex.bean.User where userName='一块'
[03/04/19 05:37:20:020 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:37:20:020 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'flyex'
    |  |        |  \-[IDENT] Node: 'bean'
    |  |        \-[IDENT] Node: 'User'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'age'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'userName'
          \-[QUOTED_STRING] Node: ''\u4e00\u5757''

[03/04/19 05:37:20:020 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[03/04/19 05:37:20:020 CST] DEBUG tree.FromElement: FromClause{level=1} : com.flyex.bean.User (<no alias>) -> user0_
[03/04/19 05:37:20:020 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:37:20:020 CST] DEBUG tree.DotNode: getDataType() : age -> org.hibernate.type.IntegerType@44e3760b
[03/04/19 05:37:20:020 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.age -> user0_.Age
[03/04/19 05:37:20:020 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias} -> {synthetic-alias}
[03/04/19 05:37:20:020 CST] DEBUG tree.DotNode: getDataType() : userName -> org.hibernate.type.StringType@f74e835
[03/04/19 05:37:20:020 CST] DEBUG tree.FromReferenceNode: Resolved : {synthetic-alias}.userName -> user0_.UserName
[03/04/19 05:37:20:020 CST] DEBUG antlr.HqlSqlBaseWalker: select : finishing up [level=1, statement=select]
[03/04/19 05:37:20:020 CST] DEBUG ast.HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} ( user0_.Age {synthetic-alias} age ) ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.UserName {synthetic-alias} userName ) '一块' ) ) )
[03/04/19 05:37:20:020 CST] DEBUG util.JoinProcessor: Using FROM fragment [user user0_]
[03/04/19 05:37:20:020 CST] DEBUG antlr.HqlSqlBaseWalker: select >> end [level=1, statement=select]
[03/04/19 05:37:20:020 CST] DEBUG ast.QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.Age' {propertyName=age,dereferenceType=PRIMITIVE,getPropertyPath=age,path={synthetic-alias}.age,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'age' {originalText=age}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.flyex.bean.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.UserName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path={synthetic-alias}.userName,tableAlias=user0_,className=com.flyex.bean.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[QUOTED_STRING] LiteralNode: ''\u4e00\u5757''

[03/04/19 05:37:20:020 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:37:20:020 CST] DEBUG ast.QueryTranslatorImpl: HQL: select age from com.flyex.bean.User where userName='一块'
[03/04/19 05:37:20:020 CST] DEBUG ast.QueryTranslatorImpl: SQL: select user0_.Age as col_0_0_ from user user0_ where user0_.UserName='一块'
[03/04/19 05:37:20:020 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[03/04/19 05:37:23:023 CST] DEBUG internal.TransactionImpl: committing
[03/04/19 05:37:23:023 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 05:37:23:023 CST] DEBUG internal.LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
[03/04/19 05:37:23:023 CST] DEBUG internal.SessionFactoryImpl: HHH000031: Closing
[03/04/19 05:37:23:023 CST] DEBUG spi.TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@37a9b687] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@22a6e998]
[03/04/19 05:37:23:023 CST] DEBUG internal.AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[03/04/19 05:37:23:023 CST]  INFO connections.pooling: HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/test]
[03/04/19 05:37:23:023 CST] DEBUG internal.BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[12/04/19 08:58:31:031 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[12/04/19 08:58:31:031 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[12/04/19 08:58:31:031 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[12/04/19 08:58:31:031 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[12/04/19 08:58:31:031 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[12/04/19 08:58:32:032 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[12/04/19 08:58:32:032 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[12/04/19 08:58:32:032 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[12/04/19 08:58:32:032 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[12/04/19 08:58:32:032 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[12/04/19 08:58:32:032 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[12/04/19 08:58:32:032 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[12/04/19 08:58:32:032 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[12/04/19 08:58:32:032 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@292d1c71
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ddabb18
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@58e6d4b8
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@6ca0256d
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c3dec30
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6731787b
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6731787b
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6731787b
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ba534b0
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5860f3d7
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5860f3d7
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5860f3d7
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@34625ccd
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10fde30a
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9bd0fa6
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1991f767
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1991f767
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c9f0a20
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c9f0a20
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@3f28bd56
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@3f28bd56
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5be067de
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24fb6a80
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@b40bb6e
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@b40bb6e
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@346a361
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@346a361
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@43b4fe19
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43b4fe19
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@18a3962d
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@18a3962d
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@76a36b71
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a36b71
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@35beb15e
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35beb15e
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35beb15e
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c9399a4
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5bda80bf
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5bda80bf
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5bda80bf
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fd46303
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@79e18e38
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79e18e38
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6d1d4d7
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d1d4d7
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2606b
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2606b
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@2cf23c81
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cf23c81
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1255b1d1
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1255b1d1
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60bdf15d
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@66629f63
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@66629f63
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@66629f63
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1568159
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1568159
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1568159
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@6e521c1e
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4ef27d66
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3f23a3a0
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f23a3a0
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3f23a3a0
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32cb636e
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32cb636e
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32cb636e
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6a1d204a
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@6c6357f9
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@ce5a68e
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ce5a68e
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c041b41
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4a8a60bc
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a8a60bc
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@5af28b27
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5af28b27
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c9168dc
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@32232e55
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@77307458
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@ec0c838
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ec0c838
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21c64522
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7997b197
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11dee337
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@460f76a6
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55f3c410
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11acdc30
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@770d4269
[12/04/19 08:58:33:033 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a8ab068
[12/04/19 08:58:33:033 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[12/04/19 08:58:33:033 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[12/04/19 08:58:33:033 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[12/04/19 08:58:34:034 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[12/04/19 08:58:34:034 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[12/04/19 08:58:34:034 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[12/04/19 08:58:34:034 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[12/04/19 08:58:34:034 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[12/04/19 08:58:34:034 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[12/04/19 08:58:34:034 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[12/04/19 08:58:34:034 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[12/04/19 08:58:34:034 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[12/04/19 08:58:34:034 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[12/04/19 08:58:34:034 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[12/04/19 08:58:34:034 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[12/04/19 08:58:34:034 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[12/04/19 08:58:34:034 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[12/04/19 08:58:34:034 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[12/04/19 08:58:34:034 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[12/04/19 08:58:34:034 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[12/04/19 08:58:34:034 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[12/04/19 08:58:34:034 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[12/04/19 08:58:34:034 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[12/04/19 08:58:34:034 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[12/04/19 08:58:34:034 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[12/04/19 08:58:34:034 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[12/04/19 08:58:34:034 CST]  WARN internal.JdbcEnvironmentInitiator: HHH000342: Could not obtain connection to query metadata : null
[12/04/19 08:58:34:034 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[12/04/19 08:58:34:034 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[12/04/19 08:58:34:034 CST] DEBUG internal.LobCreatorBuilderImpl: HHH000422: Disabling contextual LOB creation as connection was null
[12/04/19 08:58:34:034 CST] DEBUG spi.SqlExceptionHelper: Error calling Driver#connect [null]
java.sql.SQLException: The server time zone value 'ÖÐ¹ú±ê×¼Ê±¼ä' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:832)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:207)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:321)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:240)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:218)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:359)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.test.wuzhong.dao.WuzhongDao.main(WuzhongDao.java:15)
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value 'ÖÐ¹ú±ê×¼Ê±¼ä' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85)
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2236)
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2260)
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1314)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:963)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:822)
	... 33 more
[12/04/19 08:58:34:034 CST]  WARN spi.SqlExceptionHelper: SQL Error: 0, SQLState: 01S00
[12/04/19 08:58:34:034 CST] ERROR spi.SqlExceptionHelper: The server time zone value 'ÖÐ¹ú±ê×¼Ê±¼ä' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
[12/04/19 08:59:59:059 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[12/04/19 08:59:59:059 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[12/04/19 08:59:59:059 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[12/04/19 08:59:59:059 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[12/04/19 08:59:59:059 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[12/04/19 08:59:59:059 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[12/04/19 08:59:59:059 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[12/04/19 08:59:59:059 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[12/04/19 08:59:59:059 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[12/04/19 08:59:59:059 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[12/04/19 08:59:59:059 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[12/04/19 09:00:00:000 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[12/04/19 09:00:00:000 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[12/04/19 09:00:00:000 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@292d1c71
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ddabb18
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@58e6d4b8
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@6ca0256d
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c3dec30
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6731787b
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6731787b
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6731787b
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ba534b0
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5860f3d7
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5860f3d7
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5860f3d7
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@34625ccd
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10fde30a
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9bd0fa6
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1991f767
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1991f767
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c9f0a20
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c9f0a20
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@3f28bd56
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@3f28bd56
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5be067de
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24fb6a80
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@b40bb6e
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@b40bb6e
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@346a361
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@346a361
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@43b4fe19
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43b4fe19
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@18a3962d
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@18a3962d
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@76a36b71
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a36b71
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@35beb15e
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35beb15e
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35beb15e
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c9399a4
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5bda80bf
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5bda80bf
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5bda80bf
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fd46303
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@79e18e38
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79e18e38
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6d1d4d7
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d1d4d7
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2606b
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2606b
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@2cf23c81
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cf23c81
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1255b1d1
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1255b1d1
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60bdf15d
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@66629f63
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@66629f63
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@66629f63
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1568159
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1568159
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1568159
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@6e521c1e
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4ef27d66
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3f23a3a0
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f23a3a0
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3f23a3a0
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32cb636e
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32cb636e
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32cb636e
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6a1d204a
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@6c6357f9
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@ce5a68e
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ce5a68e
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c041b41
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4a8a60bc
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a8a60bc
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@5af28b27
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5af28b27
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c9168dc
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@32232e55
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@77307458
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@ec0c838
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ec0c838
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21c64522
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7997b197
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11dee337
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@460f76a6
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55f3c410
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11acdc30
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@770d4269
[12/04/19 09:00:00:000 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a8ab068
[12/04/19 09:00:00:000 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[12/04/19 09:00:00:000 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[12/04/19 09:00:00:000 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[12/04/19 09:00:01:001 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[12/04/19 09:00:01:001 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[12/04/19 09:00:01:001 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[12/04/19 09:00:01:001 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[12/04/19 09:00:01:001 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[12/04/19 09:00:01:001 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[12/04/19 09:00:01:001 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[12/04/19 09:00:01:001 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[12/04/19 09:00:01:001 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[12/04/19 09:00:01:001 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[12/04/19 09:00:01:001 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[12/04/19 09:00:01:001 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[12/04/19 09:00:01:001 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[12/04/19 09:00:01:001 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[12/04/19 09:00:01:001 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[12/04/19 09:00:01:001 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[12/04/19 09:00:01:001 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[12/04/19 09:00:01:001 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[12/04/19 09:00:01:001 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[12/04/19 09:00:01:001 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[12/04/19 09:00:01:001 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[12/04/19 09:00:01:001 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[12/04/19 09:00:01:001 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[12/04/19 09:00:01:001 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 5.6.43
      major : 5
      minor : 6
[12/04/19 09:00:01:001 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[12/04/19 09:00:01:001 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[12/04/19 09:00:01:001 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[12/04/19 09:00:01:001 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[12/04/19 09:00:01:001 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[12/04/19 09:00:01:001 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[12/04/19 09:00:01:001 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27d57a2c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2ff95fc6]
[12/04/19 09:00:01:001 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[12/04/19 09:00:01:001 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[12/04/19 09:00:01:001 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[12/04/19 09:00:01:001 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[12/04/19 09:00:01:001 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[12/04/19 09:00:01:001 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[12/04/19 09:00:01:001 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[12/04/19 09:00:01:001 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[12/04/19 09:00:01:001 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[12/04/19 09:00:01:001 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[12/04/19 09:00:01:001 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[12/04/19 09:00:01:001 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[12/04/19 09:00:01:001 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[12/04/19 09:00:01:001 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[12/04/19 09:00:01:001 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[12/04/19 09:00:01:001 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[12/04/19 09:00:01:001 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[12/04/19 09:00:01:001 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[12/04/19 09:00:01:001 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[12/04/19 09:00:01:001 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: SessionFactory name : null
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Statistics: disabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Default null ordering: NONE
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Query language substitutions: {}
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Named query checking : enabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Second-level cache: disabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: JDBC batch size: 15
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: JPA compliance - query : 
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[12/04/19 09:00:01:001 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[12/04/19 09:00:02:002 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[12/04/19 09:00:02:002 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.test.wuzhong.dao.WuzhongDao, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4c18621b, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\mysql-5.6.43-winx64\bin;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[12/04/19 09:00:02:002 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[12/04/19 09:00:02:002 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[12/04/19 09:00:02:002 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27d57a2c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@43a0a32d]
[12/04/19 09:00:02:002 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[12/04/19 09:00:02:002 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[12/04/19 09:00:02:002 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[12/04/19 09:00:02:002 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[12/04/19 09:00:02:002 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[12/04/19 09:00:02:002 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[12/04/19 09:00:02:002 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[12/04/19 09:00:02:002 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[12/04/19 09:00:02:002 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[12/04/19 09:00:02:002 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[12/04/19 09:00:02:002 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[12/04/19 09:00:02:002 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[12/04/19 09:00:02:002 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c854752]
[12/04/19 09:00:02:002 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2e3572e8]
[12/04/19 09:00:02:002 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[12/04/19 09:00:02:002 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[12/04/19 09:00:02:002 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[12/04/19 09:00:02:002 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[12/04/19 09:00:02:002 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[12/04/19 09:00:02:002 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[12/04/19 09:00:02:002 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[12/04/19 09:00:02:002 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dc1dc69]
[12/04/19 09:00:02:002 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7e9f2c32]
[12/04/19 09:00:02:002 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[12/04/19 09:00:02:002 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[12/04/19 09:00:02:002 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[12/04/19 09:00:02:002 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[12/04/19 09:00:02:002 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[12/04/19 09:00:02:002 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[12/04/19 09:00:02:002 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[12/04/19 09:00:02:002 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[12/04/19 09:00:02:002 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[12/04/19 09:00:02:002 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[12/04/19 09:00:02:002 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[12/04/19 09:00:02:002 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[12/04/19 09:00:02:002 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[12/04/19 09:00:02:002 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[12/04/19 09:00:02:002 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[12/04/19 09:00:02:002 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[12/04/19 09:00:02:002 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aa11206]
[12/04/19 09:00:02:002 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[12/04/19 09:00:02:002 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[12/04/19 09:00:02:002 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[12/04/19 09:00:02:002 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[12/04/19 09:00:02:002 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[12/04/19 09:00:02:002 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[12/04/19 09:00:02:002 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d21852b]
[12/04/19 09:00:02:002 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[12/04/19 09:00:02:002 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[12/04/19 09:00:02:002 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[12/04/19 09:00:02:002 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[12/04/19 09:00:02:002 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[12/04/19 09:00:02:002 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[12/04/19 09:00:02:002 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[12/04/19 09:00:02:002 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[12/04/19 09:00:02:002 CST] DEBUG mapping.Table: No alter strings for table : user
[12/04/19 09:00:02:002 CST] DEBUG mapping.Table: No alter strings for table : user2
[12/04/19 09:00:02:002 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[12/04/19 09:00:02:002 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[12/04/19 09:00:02:002 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[12/04/19 09:00:02:002 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[12/04/19 09:00:02:002 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[12/04/19 09:00:02:002 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[12/04/19 09:00:02:002 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@28a9494b
[12/04/19 09:00:02:002 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 8cd6e96d-2b3e-41d7-bf47-7021bb3fb1c4 (<unnamed>)
[12/04/19 09:00:02:002 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[12/04/19 09:00:02:002 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[12/04/19 09:00:02:002 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[12/04/19 09:00:02:002 CST] DEBUG internal.TransactionImpl: begin
[12/04/19 09:00:02:002 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@460b50df
[12/04/19 09:00:02:002 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select Wuzhong from Wuzhong where wname='哺乳类'
[12/04/19 09:00:02:002 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[12/04/19 09:00:02:002 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[IDENT] Node: 'Wuzhong'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'Wuzhong'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'wname'
          \-[QUOTED_STRING] Node: ''\u54fa\u4e73\u7c7b''

[12/04/19 09:00:02:002 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[12/04/19 09:00:02:002 CST] DEBUG internal.JdbcResourceLocalTransactionCoordinatorImpl: JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:378)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:712)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:23)
	at com.test.wuzhong.dao.WuzhongDao.main(WuzhongDao.java:19)
[12/04/19 09:00:33:033 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[12/04/19 09:00:33:033 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[12/04/19 09:00:33:033 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[12/04/19 09:00:33:033 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[12/04/19 09:00:33:033 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[12/04/19 09:00:34:034 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[12/04/19 09:00:34:034 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[12/04/19 09:00:34:034 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[12/04/19 09:00:34:034 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[12/04/19 09:00:34:034 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[12/04/19 09:00:34:034 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[12/04/19 09:00:34:034 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[12/04/19 09:00:34:034 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[12/04/19 09:00:34:034 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@292d1c71
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ddabb18
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@58e6d4b8
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@6ca0256d
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c3dec30
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6731787b
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6731787b
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6731787b
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ba534b0
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5860f3d7
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5860f3d7
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5860f3d7
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@34625ccd
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10fde30a
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9bd0fa6
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1991f767
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1991f767
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c9f0a20
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c9f0a20
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@3f28bd56
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@3f28bd56
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5be067de
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24fb6a80
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@b40bb6e
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@b40bb6e
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@346a361
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@346a361
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@43b4fe19
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43b4fe19
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@18a3962d
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@18a3962d
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@76a36b71
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a36b71
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@35beb15e
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35beb15e
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35beb15e
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c9399a4
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5bda80bf
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5bda80bf
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5bda80bf
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fd46303
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@79e18e38
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79e18e38
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6d1d4d7
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d1d4d7
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2606b
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2606b
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@2cf23c81
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cf23c81
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1255b1d1
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1255b1d1
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60bdf15d
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@66629f63
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@66629f63
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@66629f63
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1568159
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1568159
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1568159
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@6e521c1e
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4ef27d66
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3f23a3a0
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f23a3a0
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3f23a3a0
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32cb636e
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32cb636e
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32cb636e
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6a1d204a
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@6c6357f9
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@ce5a68e
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ce5a68e
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c041b41
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4a8a60bc
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a8a60bc
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@5af28b27
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5af28b27
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c9168dc
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@32232e55
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@77307458
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@ec0c838
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ec0c838
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21c64522
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7997b197
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11dee337
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@460f76a6
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55f3c410
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11acdc30
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@770d4269
[12/04/19 09:00:35:035 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a8ab068
[12/04/19 09:00:35:035 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[12/04/19 09:00:35:035 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[12/04/19 09:00:35:035 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[12/04/19 09:00:36:036 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[12/04/19 09:00:36:036 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[12/04/19 09:00:36:036 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[12/04/19 09:00:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[12/04/19 09:00:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[12/04/19 09:00:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[12/04/19 09:00:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[12/04/19 09:00:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[12/04/19 09:00:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[12/04/19 09:00:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[12/04/19 09:00:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[12/04/19 09:00:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[12/04/19 09:00:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[12/04/19 09:00:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[12/04/19 09:00:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[12/04/19 09:00:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[12/04/19 09:00:36:036 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[12/04/19 09:00:36:036 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[12/04/19 09:00:36:036 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[12/04/19 09:00:36:036 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[12/04/19 09:00:36:036 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[12/04/19 09:00:36:036 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[12/04/19 09:00:36:036 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[12/04/19 09:00:36:036 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 5.6.43
      major : 5
      minor : 6
[12/04/19 09:00:36:036 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[12/04/19 09:00:36:036 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[12/04/19 09:00:36:036 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[12/04/19 09:00:36:036 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[12/04/19 09:00:36:036 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[12/04/19 09:00:36:036 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[12/04/19 09:00:36:036 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27d57a2c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2ff95fc6]
[12/04/19 09:00:36:036 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[12/04/19 09:00:36:036 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[12/04/19 09:00:36:036 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[12/04/19 09:00:36:036 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[12/04/19 09:00:36:036 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[12/04/19 09:00:36:036 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[12/04/19 09:00:36:036 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[12/04/19 09:00:36:036 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[12/04/19 09:00:36:036 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[12/04/19 09:00:36:036 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[12/04/19 09:00:36:036 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[12/04/19 09:00:36:036 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[12/04/19 09:00:36:036 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[12/04/19 09:00:36:036 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[12/04/19 09:00:36:036 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[12/04/19 09:00:36:036 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[12/04/19 09:00:36:036 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[12/04/19 09:00:36:036 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[12/04/19 09:00:36:036 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[12/04/19 09:00:36:036 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: SessionFactory name : null
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Statistics: disabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Default null ordering: NONE
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Query language substitutions: {}
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Named query checking : enabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Second-level cache: disabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: JDBC batch size: 15
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: JPA compliance - query : 
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[12/04/19 09:00:36:036 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[12/04/19 09:00:36:036 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[12/04/19 09:00:36:036 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.test.wuzhong.dao.WuzhongDao, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4c18621b, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\mysql-5.6.43-winx64\bin;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[12/04/19 09:00:36:036 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[12/04/19 09:00:36:036 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[12/04/19 09:00:36:036 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27d57a2c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@43a0a32d]
[12/04/19 09:00:36:036 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[12/04/19 09:00:36:036 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[12/04/19 09:00:37:037 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[12/04/19 09:00:37:037 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[12/04/19 09:00:37:037 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[12/04/19 09:00:37:037 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[12/04/19 09:00:37:037 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[12/04/19 09:00:37:037 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[12/04/19 09:00:37:037 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[12/04/19 09:00:37:037 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[12/04/19 09:00:37:037 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[12/04/19 09:00:37:037 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[12/04/19 09:00:37:037 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c854752]
[12/04/19 09:00:37:037 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2e3572e8]
[12/04/19 09:00:37:037 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[12/04/19 09:00:37:037 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[12/04/19 09:00:37:037 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[12/04/19 09:00:37:037 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[12/04/19 09:00:37:037 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[12/04/19 09:00:37:037 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[12/04/19 09:00:37:037 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[12/04/19 09:00:37:037 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dc1dc69]
[12/04/19 09:00:37:037 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7e9f2c32]
[12/04/19 09:00:37:037 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[12/04/19 09:00:37:037 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[12/04/19 09:00:37:037 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[12/04/19 09:00:37:037 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[12/04/19 09:00:37:037 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[12/04/19 09:00:37:037 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[12/04/19 09:00:37:037 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[12/04/19 09:00:37:037 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[12/04/19 09:00:37:037 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[12/04/19 09:00:37:037 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[12/04/19 09:00:37:037 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[12/04/19 09:00:37:037 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[12/04/19 09:00:37:037 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[12/04/19 09:00:37:037 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[12/04/19 09:00:37:037 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[12/04/19 09:00:37:037 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[12/04/19 09:00:37:037 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aa11206]
[12/04/19 09:00:37:037 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[12/04/19 09:00:37:037 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[12/04/19 09:00:37:037 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[12/04/19 09:00:37:037 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[12/04/19 09:00:37:037 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[12/04/19 09:00:37:037 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[12/04/19 09:00:37:037 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d21852b]
[12/04/19 09:00:37:037 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[12/04/19 09:00:37:037 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[12/04/19 09:00:37:037 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[12/04/19 09:00:37:037 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[12/04/19 09:00:37:037 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[12/04/19 09:00:37:037 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[12/04/19 09:00:37:037 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[12/04/19 09:00:37:037 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[12/04/19 09:00:37:037 CST] DEBUG mapping.Table: No alter strings for table : user
[12/04/19 09:00:37:037 CST] DEBUG mapping.Table: No alter strings for table : user2
[12/04/19 09:00:37:037 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[12/04/19 09:00:37:037 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[12/04/19 09:00:37:037 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[12/04/19 09:00:37:037 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[12/04/19 09:00:37:037 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[12/04/19 09:00:37:037 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[12/04/19 09:00:37:037 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@28a9494b
[12/04/19 09:00:37:037 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 55b7a064-b7ce-468b-903c-c20011606889 (<unnamed>)
[12/04/19 09:00:37:037 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[12/04/19 09:00:37:037 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[12/04/19 09:00:37:037 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[12/04/19 09:00:37:037 CST] DEBUG internal.TransactionImpl: begin
[12/04/19 09:00:37:037 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@460b50df
[12/04/19 09:00:37:037 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select Wuzhong from Wuzhong where wname='哺乳类'
[12/04/19 09:00:37:037 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[12/04/19 09:00:37:037 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[IDENT] Node: 'Wuzhong'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'Wuzhong'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'wname'
          \-[QUOTED_STRING] Node: ''\u54fa\u4e73\u7c7b''

[12/04/19 09:00:37:037 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[12/04/19 09:00:37:037 CST] DEBUG internal.JdbcResourceLocalTransactionCoordinatorImpl: JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:378)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:712)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:23)
	at com.test.wuzhong.dao.WuzhongDao.main(WuzhongDao.java:19)
[12/04/19 09:02:55:055 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[12/04/19 09:02:55:055 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[12/04/19 09:02:55:055 CST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[12/04/19 09:02:55:055 CST]  INFO hibernate.Version: HHH000412: Hibernate Core {5.4.1.Final}
[12/04/19 09:02:55:055 CST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[12/04/19 09:02:55:055 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[12/04/19 09:02:55:055 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[12/04/19 09:02:55:055 CST] DEBUG internal.JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[12/04/19 09:02:56:056 CST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[12/04/19 09:02:56:056 CST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[12/04/19 09:02:56:056 CST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[12/04/19 09:02:56:056 CST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[12/04/19 09:02:56:056 CST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[12/04/19 09:02:56:056 CST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@292d1c71
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@292d1c71
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ddabb18
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@58e6d4b8
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@6ca0256d
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2c3dec30
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c3dec30
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6731787b
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6731787b
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6731787b
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4ba534b0
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ba534b0
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5860f3d7
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5860f3d7
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5860f3d7
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@34625ccd
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@34625ccd
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@10fde30a
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10fde30a
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@9bd0fa6
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9bd0fa6
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1991f767
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1991f767
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c9f0a20
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c9f0a20
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@3f28bd56
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@3f28bd56
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5be067de
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24fb6a80
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@b40bb6e
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@b40bb6e
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@346a361
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@346a361
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@43b4fe19
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43b4fe19
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7fcbe147
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c0fae6c
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@475835b1
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc126dc
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d08f3f5
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7b139eab
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@18a3962d
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@18a3962d
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@76a36b71
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a36b71
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@35beb15e
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35beb15e
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35beb15e
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c9399a4
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5bda80bf
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5bda80bf
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5bda80bf
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fd46303
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@79e18e38
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79e18e38
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6d1d4d7
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d1d4d7
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2606b
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2606b
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@2cf23c81
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cf23c81
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1255b1d1
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1255b1d1
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60bdf15d
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@66629f63
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@66629f63
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@66629f63
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1568159
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1568159
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1568159
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@6e521c1e
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4ef27d66
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3f23a3a0
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f23a3a0
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3f23a3a0
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32cb636e
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32cb636e
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32cb636e
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6a1d204a
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@6c6357f9
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@ce5a68e
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ce5a68e
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c041b41
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4a8a60bc
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a8a60bc
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@5af28b27
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5af28b27
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c9168dc
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@32232e55
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@77307458
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@ec0c838
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ec0c838
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21c64522
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7997b197
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11dee337
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@460f76a6
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55f3c410
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11acdc30
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@770d4269
[12/04/19 09:02:56:056 CST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a8ab068
[12/04/19 09:02:56:056 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[12/04/19 09:02:56:056 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[12/04/19 09:02:56:056 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User.hbm.xml,type=RESOURCE)
[12/04/19 09:02:57:057 CST] DEBUG stax.LocalXmlResourceResolver: Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
[12/04/19 09:02:57:057 CST] DEBUG stax.LocalXmlResourceResolver: Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[12/04/19 09:02:57:057 CST] DEBUG internal.MappingBinder: Performing JAXB binding of hbm.xml document : Origin(name=com/flyex/bean/User2.hbm.xml,type=RESOURCE)
[12/04/19 09:02:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[12/04/19 09:02:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[12/04/19 09:02:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[12/04/19 09:02:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[12/04/19 09:02:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[12/04/19 09:02:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[12/04/19 09:02:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[12/04/19 09:02:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[12/04/19 09:02:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[12/04/19 09:02:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[12/04/19 09:02:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[12/04/19 09:02:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[12/04/19 09:02:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[12/04/19 09:02:57:057 CST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[12/04/19 09:02:57:057 CST]  WARN connections.pooling: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[12/04/19 09:02:57:057 CST]  INFO connections.pooling: HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test]
[12/04/19 09:02:57:057 CST]  INFO connections.pooling: HHH10001001: Connection properties: {password=2112qwe, autocommit=true, user=root}
[12/04/19 09:02:57:057 CST]  INFO connections.pooling: HHH10001003: Autocommit mode: true
[12/04/19 09:02:57:057 CST] DEBUG internal.DriverManagerConnectionProviderImpl: Initializing Connection pool with 1 Connections
[12/04/19 09:02:57:057 CST]  INFO internal.DriverManagerConnectionProviderImpl: HHH000115: Hibernate connection pool size: 20 (min=1)
[12/04/19 09:02:57:057 CST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 5.6.43
      major : 5
      minor : 6
[12/04/19 09:02:57:057 CST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
[12/04/19 09:02:57:057 CST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[12/04/19 09:02:57:057 CST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[12/04/19 09:02:57:057 CST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[12/04/19 09:02:57:057 CST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[12/04/19 09:02:57:057 CST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[12/04/19 09:02:57:057 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27d57a2c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2ff95fc6]
[12/04/19 09:02:57:057 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User]; ignoring
[12/04/19 09:02:57:057 CST] DEBUG annotations.AnnotationMetadataSourceProcessorImpl: Encountered a non-categorized annotated class [com.flyex.bean.User21]; ignoring
[12/04/19 09:02:58:058 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User -> user
[12/04/19 09:02:58:058 CST] DEBUG hbm.ModelBinder: Binding virtual component [com.flyex.bean.User.<id>] to owner class [com.flyex.bean.User]
[12/04/19 09:02:58:058 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [Id]
[12/04/19 09:02:58:058 CST] DEBUG hbm.ModelBinder: Mapped property: userName -> [UserName]
[12/04/19 09:02:58:058 CST] DEBUG hbm.ModelBinder: Mapped property: age -> [Age]
[12/04/19 09:02:58:058 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user]
[12/04/19 09:02:58:058 CST] DEBUG mapping.PrimaryKey: Forcing column [username] to be non-null as it is part of the primary key for table [user]
[12/04/19 09:02:58:058 CST] DEBUG mapping.PrimaryKey: Forcing column [age] to be non-null as it is part of the primary key for table [user]
[12/04/19 09:02:58:058 CST] DEBUG hbm.ModelBinder: Mapping class: com.flyex.bean.User21 -> user2
[12/04/19 09:02:58:058 CST] DEBUG hbm.ModelBinder: Mapped property: id -> [id]
[12/04/19 09:02:58:058 CST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [user2]
[12/04/19 09:02:58:058 CST] DEBUG hbm.ModelBinder: Mapped property: name -> [username]
[12/04/19 09:02:58:058 CST] DEBUG hbm.ModelBinder: Mapped property: paiming -> [paiming]
[12/04/19 09:02:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[12/04/19 09:02:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[12/04/19 09:02:58:058 CST]  WARN mapping.RootClass: HHH000038: Composite-id class does not override equals(): com.flyex.bean.User
[12/04/19 09:02:58:058 CST]  WARN mapping.RootClass: HHH000039: Composite-id class does not override hashCode(): com.flyex.bean.User
[12/04/19 09:02:58:058 CST] DEBUG internal.SessionFactoryImpl: Building session factory
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: SessionFactory name : null
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Statistics: disabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Default entity-mode: pojo
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Default batch fetch size: -1
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Default null ordering: NONE
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Query language substitutions: {}
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Named query checking : enabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Second-level cache: disabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Second-level query cache: disabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Second-level query cache factory: null
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Second-level cache region prefix: null
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: JDBC batch size: 15
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Scrollable result sets: enabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Wrap result sets: disabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: JDBC result set fetch size: null
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Connection release mode: AFTER_TRANSACTION
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: Generate SQL with comments: disabled
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: JPA compliance - query : 
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: JPA compliance - closed-handling : 
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: JPA compliance - lists : 
[12/04/19 09:02:58:058 CST] DEBUG cfg.Settings: JPA compliance - transactions : 
[12/04/19 09:02:58:058 CST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[12/04/19 09:02:58:058 CST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=10, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\project\HibernateTest\out\production\HibernateTest;D:\project\HibernateTest\lib\dom4j-2.1.1.jar;D:\project\HibernateTest\lib\antlr-2.7.7.jar;D:\project\HibernateTest\lib\classmate-1.3.4.jar;D:\project\HibernateTest\lib\byte-buddy-1.9.5.jar;D:\project\HibernateTest\lib\FastInfoset-1.2.15.jar;D:\project\HibernateTest\lib\hibernate-commons-annotations-5.1.0.Final.jar;D:\project\HibernateTest\lib\jandex-2.0.5.Final.jar;D:\project\HibernateTest\lib\istack-commons-runtime-3.0.7.jar;D:\project\HibernateTest\lib\javassist-3.24.0-GA.jar;D:\project\HibernateTest\lib\hibernate-core-5.4.1.Final.jar;D:\project\HibernateTest\lib\javax.activation-api-1.2.0.jar;D:\project\HibernateTest\lib\javax.persistence-api-2.2.jar;D:\project\HibernateTest\lib\jaxb-api-2.3.1.jar;D:\project\HibernateTest\lib\jaxb-runtime-2.3.1.jar;D:\project\HibernateTest\lib\jboss-logging-3.3.2.Final.jar;D:\project\HibernateTest\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;D:\project\HibernateTest\lib\stax-ex-1.8.jar;D:\project\HibernateTest\lib\txw2-2.3.1.jar;D:\project\HibernateTest\lib\mysql-connector-java-8.0.12.jar;D:\project\HibernateTest\lib\log4j-1.2.17.jar;D:\project\HibernateTest\lib\slf4j-api-1.7.26.jar, java.vm.vendor="Oracle Corporation", sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, hibernate.connection.autocommit=true, os.name=Windows 10, java.vm.specification.version=10, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk-10.0.2\bin, sun.java.command=com.test.wuzhong.dao.WuzhongDao, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\zhixin.lv, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2018-07-17, java.home=C:\Program Files\Java\jdk-10.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=10.0.2+13, user.name=zhixin.lv, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.3, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\zhixin.lv\AppData\Local\Temp\, java.version=10.0.2, user.dir=D:\project\HibernateTest, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4c18621b, java.library.path=C:\Program Files\Java\jdk-10.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\; C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files\Java\jdk-10.0.2\jre\bin;C:\mysql-8.0.13-winx64\bin;C:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\mysql-5.6.43-winx64\bin;C:\Users\zhixin.lv\AppData\Local\GitHubDesktop\bin;C:\Users\zhixin.lv\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=10.0.2+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=54.0}
[12/04/19 09:02:58:058 CST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[12/04/19 09:02:58:058 CST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[12/04/19 09:02:58:058 CST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27d57a2c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@43a0a32d]
[12/04/19 09:02:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User] is safe
[12/04/19 09:02:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User
[12/04/19 09:02:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[12/04/19 09:02:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[12/04/19 09:02:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [com.flyex.bean.User21] is safe
[12/04/19 09:02:58:058 CST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.flyex.bean.User21
[12/04/19 09:02:58:058 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User
[12/04/19 09:02:58:058 CST] DEBUG entity.AbstractEntityPersister:  Version select: select Id, UserName, Age from user where Id =? and UserName =? and Age =?
[12/04/19 09:02:58:058 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user_.Id, user_.UserName, user_.Age from user user_ where user_.Id=? and user_.UserName=? and user_.Age=?
[12/04/19 09:02:58:058 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user (Id, UserName, Age) values (?, ?, ?)
[12/04/19 09:02:58:058 CST] DEBUG entity.AbstractEntityPersister:  Update 0: null
[12/04/19 09:02:58:058 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user where Id=? and UserName=? and Age=?
[12/04/19 09:02:58:058 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c854752]
[12/04/19 09:02:58:058 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2e3572e8]
[12/04/19 09:02:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[12/04/19 09:02:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[12/04/19 09:02:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[12/04/19 09:02:58:058 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[12/04/19 09:02:58:058 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[12/04/19 09:02:58:058 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[12/04/19 09:02:58:058 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [NONE]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[12/04/19 09:02:58:058 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dc1dc69]
[12/04/19 09:02:58:058 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7e9f2c32]
[12/04/19 09:02:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : id
[12/04/19 09:02:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : userName
[12/04/19 09:02:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : age
[12/04/19 09:02:58:058 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[12/04/19 09:02:58:058 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[12/04/19 09:02:58:058 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User, querySpaceUid=<gen:0>, path=com.flyex.bean.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {Id1_0_0_, UserName2_0_0_, Age3_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - user0_

[12/04/19 09:02:58:058 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User [READ]: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[12/04/19 09:02:58:058 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[12/04/19 09:02:58:058 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User: select user0_.Id as Id1_0_0_, user0_.UserName as UserName2_0_0_, user0_.Age as Age3_0_0_ from user user0_ where user0_.Id=? and user0_.UserName=? and user0_.Age=?
[12/04/19 09:02:58:058 CST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: com.flyex.bean.User21
[12/04/19 09:02:58:058 CST] DEBUG entity.AbstractEntityPersister:  Version select: select id from user2 where id =?
[12/04/19 09:02:58:058 CST] DEBUG entity.AbstractEntityPersister:  Snapshot select: select user2x_.id, user2x_.username as username2_1_, user2x_.paiming as paiming3_1_ from user2 user2x_ where user2x_.id=?
[12/04/19 09:02:58:058 CST] DEBUG entity.AbstractEntityPersister:  Insert 0: insert into user2 (username, paiming, id) values (?, ?, ?)
[12/04/19 09:02:58:058 CST] DEBUG entity.AbstractEntityPersister:  Update 0: update user2 set username=?, paiming=? where id=?
[12/04/19 09:02:58:058 CST] DEBUG entity.AbstractEntityPersister:  Delete 0: delete from user2 where id=?
[12/04/19 09:02:58:058 CST] DEBUG entity.AbstractEntityPersister:  Identity insert: insert into user2 (username, paiming) values (?, ?)
[12/04/19 09:02:58:058 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aa11206]
[12/04/19 09:02:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[12/04/19 09:02:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[12/04/19 09:02:58:058 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[12/04/19 09:02:58:058 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[12/04/19 09:02:58:058 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[12/04/19 09:02:58:058 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [NONE]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[12/04/19 09:02:58:058 CST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d21852b]
[12/04/19 09:02:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : name
[12/04/19 09:02:58:058 CST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : paiming
[12/04/19 09:02:58:058 CST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[12/04/19 09:02:58:058 CST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[12/04/19 09:02:58:058 CST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=com.flyex.bean.User21)
    - Returns
       - EntityReturnImpl(entity=com.flyex.bean.User21, querySpaceUid=<gen:0>, path=com.flyex.bean.User21)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.flyex.bean.User21)
          - SQL table alias mapping - user2x0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[12/04/19 09:02:58:058 CST] DEBUG plan.EntityLoader: Static select for entity com.flyex.bean.User21 [READ]: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[12/04/19 09:02:58:058 CST] DEBUG loader.Loader: Static select for action ACTION_MERGE on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[12/04/19 09:02:58:058 CST] DEBUG loader.Loader: Static select for action ACTION_REFRESH on entity com.flyex.bean.User21: select user2x0_.id as id1_1_0_, user2x0_.username as username2_1_0_, user2x0_.paiming as paiming3_1_0_ from user2 user2x0_ where user2x0_.id=?
[12/04/19 09:02:58:058 CST] DEBUG mapping.Table: No alter strings for table : user
[12/04/19 09:02:58:058 CST] DEBUG mapping.Table: No alter strings for table : user2
[12/04/19 09:02:58:058 CST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[12/04/19 09:02:58:058 CST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[12/04/19 09:02:58:058 CST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[12/04/19 09:02:58:058 CST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[12/04/19 09:02:58:058 CST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[12/04/19 09:02:58:058 CST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[12/04/19 09:02:58:058 CST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@28a9494b
[12/04/19 09:02:58:058 CST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 1b906d3f-68fe-4e21-8e39-63a037e74ab8 (<unnamed>)
[12/04/19 09:02:58:058 CST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[12/04/19 09:02:58:058 CST] DEBUG internal.StatisticsInitiator: Statistics initialized [enabled=false]
[12/04/19 09:02:58:058 CST] DEBUG internal.TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[12/04/19 09:02:58:058 CST] DEBUG internal.TransactionImpl: begin
[12/04/19 09:02:58:058 CST] DEBUG internal.QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@460b50df
[12/04/19 09:02:58:058 CST] DEBUG ast.QueryTranslatorImpl: parse() - HQL: select Wuzhong .wname from Wuzhong where wid=1
[12/04/19 09:02:58:058 CST] DEBUG ast.ErrorTracker: throwQueryException() : no errors
[12/04/19 09:02:58:058 CST] DEBUG ast.QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[IDENT] Node: 'Wuzhong'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'Wuzhong'
    |        \-[IDENT] Node: 'wname'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'wid'
          \-[NUM_INT] Node: '1'

[12/04/19 09:02:58:058 CST] DEBUG antlr.HqlSqlBaseWalker: select << begin [level=1, statement=select]
[12/04/19 09:02:58:058 CST] DEBUG internal.JdbcResourceLocalTransactionCoordinatorImpl: JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:378)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:712)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:23)
	at com.test.wuzhong.dao.WuzhongDao.main(WuzhongDao.java:19)
